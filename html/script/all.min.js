var hahaApp,__awaiter=this&&this.__awaiter||function(i,r,s,d){return new(s=s||Promise)(function(e,t){function o(e){try{n(d.next(e))}catch(e){t(e)}}function a(e){try{n(d.throw(e))}catch(e){t(e)}}function n(t){t.done?e(t.value):new s(function(e){e(t.value)}).then(o,a)}n((d=d.apply(i,r||[])).next())})};!function(e){const n=new Ammo.btTransform,i=new Ammo.btVector3,r=new Ammo.btQuaternion(1,0,0,0),s=new THREE.Matrix4,o=new THREE.Matrix4,d=new THREE.Vector3,l=new THREE.Quaternion,a=new THREE.Quaternion;e.Object=class{constructor(e,t,o,a){this.mass=e,this.collisionShape=t,this.object3D=o,this.object3D.updateMatrixWorld(),d.setFromMatrixPosition(this.object3D.matrixWorld),l.setFromRotationMatrix(s.extractRotation(this.object3D.matrixWorld)),i.setValue(d.x,d.y,d.z),r.setValue(l.x,l.y,l.z,l.w),n.setOrigin(i),n.setRotation(r);o=new Ammo.btDefaultMotionState(n);a||0==e||(t.calculateLocalInertia(e,i),a=i);a=new Ammo.btRigidBodyConstructionInfo(e,o,t,0!=e?a:void 0);this.motionState=o,this.rigidBody=new Ammo.btRigidBody(a),0==e&&this.rigidBody.setCollisionFlags(1)}update(e){this.sync()}sync(){if(0!=this.mass){this.motionState.getWorldTransform(n);const e=n.getRotation(),t=n.getOrigin();d.set(t.x(),t.y(),t.z()),l.set(e.x(),e.y(),e.z(),e.w()),this.object3D.parent&&(s.copy(this.object3D.parent.matrixWorld).invert(),a.setFromRotationMatrix(o.extractRotation(s)),l.premultiply(a),d.applyMatrix4(s)),this.object3D.quaternion.copy(l),this.object3D.position.copy(d)}}updateRigidBodyTransform(){d.setFromMatrixPosition(this.object3D.matrixWorld),l.setFromRotationMatrix(s.extractRotation(this.object3D.matrixWorld)),i.setValue(d.x,d.y,d.z),r.setValue(l.x,l.y,l.z,l.w),n.setOrigin(i),n.setRotation(r),this.rigidBody.setWorldTransform(n),this.motionState.setWorldTransform(n)}}}(hahaApp=hahaApp||{}),function(e){const d=1e-4,l=new THREE.Vector3,u=new THREE.Vector3;function h(e){return`${Math.round(e.x/d)},${Math.round(e.y/d)},${Math.round(e.z/d)}`}e.SoftBody=class{constructor(e,t,o){this.soundCooldown=1;var a=function(e){const t=e.clone();for(var o in t.attributes)"position"===o||t.deleteAttribute(o);var a=(n=THREE.BufferGeometryUtils.mergeVertices(t,d)).attributes.position,n=n.index;const i=new Map;for(let e=0;e<a.count;e++)l.fromBufferAttribute(a,e),i.set(h(l),e);var r=e.attributes.position;const s=new Array(r.count);for(let e=0;e<r.count;e++)l.fromBufferAttribute(r,e),s[e]=i.get(h(l));return{position:Array.from(a.array),index:Array.from(n.array),mapping:s}}(this.geometry=t);const n=new Ammo.btSoftBodyHelpers;this.softbody=n.CreateFromTriMesh(e,a.position,a.index,a.index.length/3,!0),this.softbody.m_cfg.kPR=5,this.softbody.m_cfg.viterations=10,this.softbody.m_cfg.piterations=10,this.softbody.setTotalMass(.1,!0),this.softbody.getCollisionShape().setMargin(.05),this.mapping=a.mapping,Ammo.destroy(n),this.mesh=new THREE.Mesh(t,o)}onDeform(e,t,o){.2<t&&this.soundCooldown<=0&&(e.audio.playSoundByIndex(this.softbody.getUserIndex()),this.soundCooldown=.5)}update(e,t){this.soundCooldown-=t;const o=this.geometry.attributes.position,a=this.geometry.attributes.normal,n=o.count,i=new THREE.Vector3,r=new THREE.Vector3;let s=0,d=0;u.set(0,0,0);for(let e=0;e<n;e++){const n=this.softbody.m_nodes.at(this.mapping[e]),h=n.m_x,c=n.m_n;i.fromBufferAttribute(o,e),r.set(h.x(),h.y(),h.z());var l=i.distanceTo(r);s=Math.max(s,l),d+=l,u.addScaledVector(r,l),r.toArray(o.array,3*e),a.setXYZ(e,c.x(),c.y(),c.z())}u.divideScalar(d),o.needsUpdate=!0,a.needsUpdate=!0,this.onDeform(e,s,u)}}}(hahaApp=hahaApp||{}),function(f){const o=new THREE.Vector2,a=new THREE.Vector2,g=new THREE.Vector3;new THREE.Vector4;const n=new THREE.Vector2(1,-1),i=new THREE.Matrix4;new THREE.Matrix4;const E=new Ammo.btVector3,d=new Ammo.btTransform;class y extends f.Object{update(e){super.update(e),this.object3D.rotateY(Math.PI*e/10),this.object3D.updateMatrixWorld(),this.updateRigidBodyTransform()}}function w(e){e.traverse(e=>{if(e.isMesh){const o=e.material;if(o instanceof THREE.MeshStandardMaterial){for(var t of[o.map,o.normalMap,o.roughnessMap,o.metalnessMap])t&&16!=t.anisotropy&&(t.anisotropy=16,t.needsUpdate=!0);o.side==THREE.DoubleSide&&(o.side=THREE.FrontSide,o.needsUpdate=!0)}}})}f.setAnisotropic=w;f.App=class{constructor(e){this.canvas=e,this.hud=new f.HUD,this.loadingBar=new f.LoadingBar,this.objects=[],this.softBodies=[],this.passes=new Map,this.timeElapsed=0,this.mousePressed=!1,this.pointerMove=new THREE.Vector2,this.pointerPosition=new THREE.Vector2,this.fpsCounter=0,this.running=!0,this.player=new f.Player,this.audio=new f.AudioManager,this.contacts=new WeakMap;var t=e.getBoundingClientRect();e.width=t.width,e.height=t.height;var o=e.getContext("webgl2",{});this.renderer=new THREE.WebGLRenderer({context:o}),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=THREE.PCFSoftShadowMap,this.renderer.setSize(t.width,t.height),this.renderer.setClearColor("#0000ff"),this.effectComposer=new THREE.EffectComposer(this.renderer),this.effectComposer.renderTarget1.depthTexture=new THREE.DepthTexture(t.width,t.height),this.effectComposer.renderTarget2.depthTexture=new THREE.DepthTexture(t.width,t.height),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(50,t.width/t.height),this.scene.add(new f.OutlinePlane);var a=new THREE.RenderPass(this.scene,this.camera);this.effectComposer.addPass(a);o=new f.DofPass(this.camera,{focus:5,maxblur:.005,aperture:.0025});this.effectComposer.addPass(o);a=new THREE.SMAAPass(t.width,t.height);this.effectComposer.addPass(a);t=new THREE.UnrealBloomPass(new THREE.Vector2(t.width,t.height),.2);this.effectComposer.addPass(t),this.passes.set("smaa",a),this.passes.set("dof",o),this.passes.set("bloom",t),e.addEventListener("mousedown",e=>{this.onMouseDown(e)}),e.addEventListener("mouseup",e=>{this.onMouseUp(e)}),e.addEventListener("mousemove",e=>{this.onMouseMove(e)}),e.addEventListener("touchstart",e=>{this.onTouchStart(e)}),e.addEventListener("touchmove",e=>{this.onTouchMove(e)}),e.addEventListener("touchend",e=>{this.onTouchEnd(e)}),e.addEventListener("touchcancel",e=>{}),document.body.appendChild(this.hud.domElement),document.body.appendChild(this.loadingBar.htmlElement),document.body.appendChild((new f.InfoPanel).htmlElement),document.addEventListener("visibilitychange",e=>{switch(document.visibilityState){case"visible":this.running=!0;break;case"hidden":this.running=!1}})}init(){this.setupAmmo(),this.setupScene();const e=this.loadingBar.startLoading();return f.Player.init().then(()=>e.end()),window.addEventListener("resize",()=>{this.onResize()}),this.hud.numObjects=this.objects.length,this}start(){let e=!1;return setInterval(()=>{this.running&&(this.updateLoop(1/60),e||(e=!0,requestAnimationFrame(()=>{e=!1,this.render(),this.fpsCounter+=1})))},1e3/60),setInterval(()=>{this.hud.fps=this.fpsCounter,this.fpsCounter=0},1e3),this}setupScene(){this.scene.add(this.camera),this.scene.add(this.player.object3D);const e=new THREE.TextureLoader,n=this.loadingBar.startLoading();Promise.all([new Promise((t,o)=>e.load("./textures/dirty_concrete_1k_jpg/dirty_concrete_diff_1k.jpg",e=>t(e),void 0,e=>o(e))),new Promise((t,o)=>e.load("./textures/dirty_concrete_1k_jpg/dirty_concrete_nor_1k.jpg",e=>t(e),void 0,e=>o(e))),new Promise((t,o)=>e.load("./textures/dirty_concrete_1k_jpg/dirty_concrete_rough_1k.jpg",e=>t(e),void 0,e=>o(e)))]).then(e=>{n.end();var t=e[0],o=e[1],a=e[2];e.forEach(e=>{e.anisotropy=16,e.needsUpdate=!0}),i.map=t,i.normalMap=o,i.normalMapType=THREE.TangentSpaceNormalMap,i.roughnessMap=a,i.needsUpdate=!0});const i=new THREE.MeshStandardMaterial({metalness:0,side:THREE.BackSide}),t=new THREE.Mesh(new THREE.BoxBufferGeometry(10,10,10),i);t.position.set(0,5,0),t.castShadow=!1,t.receiveShadow=!0,this.scene.add(t),E.setValue(5,5,5);const o=new Ammo.btCompoundShape;d.setIdentity(),E.setValue(0,-5.5,0),d.setOrigin(E),E.setValue(5,.5,5),o.addChildShape(d,new Ammo.btBoxShape(E)),d.setIdentity(),E.setValue(0,5.5,0),d.setOrigin(E),E.setValue(5,.5,5),o.addChildShape(d,new Ammo.btBoxShape(E)),d.setIdentity(),E.setValue(5.5,0,0),d.setOrigin(E),E.setValue(.5,5,5),o.addChildShape(d,new Ammo.btBoxShape(E)),d.setIdentity(),E.setValue(-5.5,0,0),d.setOrigin(E),E.setValue(.5,5,5),o.addChildShape(d,new Ammo.btBoxShape(E)),d.setIdentity(),E.setValue(0,0,-5.5),d.setOrigin(E),E.setValue(5,5,.5),o.addChildShape(d,new Ammo.btBoxShape(E)),d.setIdentity(),E.setValue(0,0,5.5),d.setOrigin(E),E.setValue(5,5,.5),o.addChildShape(d,new Ammo.btBoxShape(E));var a=new f.Object(0,o,t);this.world.addRigidBody(a.rigidBody,1,4294967295),this.objects.push(a),this.camera.position.set(0,2,0),this.camera.up.set(0,1,0),this.player.object3D.add(this.camera);const r=new THREE.SpotLight(new THREE.Color(.9,.9,.9));r.angle=Math.PI/8,r.penumbra=.2,r.shadow.mapSize.set(1024,1024),r.shadow.camera.fov=r.angle,r.target=new THREE.Object3D,r.castShadow=!0,this.scene.add(r),this.light=r;a=new THREE.AmbientLight(new THREE.Color(.2,.2,.2));this.scene.add(a),this.scene.fog=new THREE.Fog(0,5,12),this.setupTargets();const s=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/corgishiba_texturing_challenge/scene.gltf",e=>{s.end();const t=e.scene;w(t);let i=0;t.traverse(e=>{if(e.isMesh){if(1==i){const o=e.geometry;o.computeBoundingSphere(),g.copy(o.boundingSphere.center).negate();var t=1/o.boundingSphere.radius;o.translate(g.x,g.y,g.z).scale(t,t,t).rotateY(Math.PI);const a=e.material;a.side=THREE.FrontSide,a.depthWrite=!0,a.needsUpdate=!0;const n=this.setupSoftBody(o,a,new THREE.Vector3(0,1,-2));n.softbody.setUserIndex(f.AudioIndex.ar)}i++}})}),this.addHangingBall(),this.addGrass()}setupAmmo(){var e=new Ammo.btSoftBodyRigidBodyCollisionConfiguration,t=new Ammo.btCollisionDispatcher(e),o=new Ammo.btDbvtBroadphase,a=new Ammo.btSequentialImpulseConstraintSolver,n=new Ammo.btDefaultSoftBodySolver,n=new Ammo.btSoftRigidDynamicsWorld(t,o,a,e,n);this.world=n}setupTargets(){const c=[new THREE.Vector3(0,0,0),new THREE.Vector3(-.5,0,1),new THREE.Vector3(.5,0,1),new THREE.Vector3(-1,0,2),new THREE.Vector3(0,0,2),new THREE.Vector3(1,0,2),new THREE.Vector3(-1.5,0,3),new THREE.Vector3(-.5,0,3),new THREE.Vector3(.5,0,3),new THREE.Vector3(1.5,0,3),new THREE.Vector3(-2,0,4),new THREE.Vector3(-1,0,4),new THREE.Vector3(0,0,4),new THREE.Vector3(1,0,4),new THREE.Vector3(2,0,4)],u=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/bottle_old_wine/scene.gltf",e=>{u.end();const t=e.scene;w(t);var o=t.getObjectByName("bottle_05L_1_03_-_Default_0");let a=o.geometry;a.rotateX(-Math.PI/2),a.computeBoundingBox(),a.boundingBox.getCenter(g),a.translate(-g.x,-g.y,-g.z),a.boundingBox.getSize(g);e=.4/g.x;a.scale(e,e,e),a.computeBoundingBox();var n=o.material;const i=f.btConvexHullShapeFromGeometry(a);var r,s=new Ammo.btVector3;i.calculateLocalInertia(1,s);const d=a.boundingBox.getSize(g).y;c.forEach(e=>{e.add(new THREE.Vector3(0,.5,-2.5)).multiply(new THREE.Vector3(.96,d,.8))});for(r of c){const l=new THREE.Mesh(a,n);l.castShadow=!0,l.receiveShadow=!0,l.position.copy(r),this.scene.add(l);const h=new f.Object(1,i,l,s);h.rigidBody.setUserIndex(f.AudioIndex.bottlelHit),this.world.addRigidBody(h.rigidBody,1,-1),this.objects.push(h)}Ammo.destroy(s)})}setupSoftBody(e,t,o,a=f.SoftBody){const n=new a(this.world.getWorldInfo(),e.clone().translate(o.x,o.y,o.z),t);return n.mesh.receiveShadow=!0,n.mesh.castShadow=!0,this.scene.add(n.mesh),this.world.addSoftBody(n.softbody,1,-1),this.softBodies.push(n),n}addHangingBall(){const p=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/wood_stick_04/scene.gltf",e=>{p.end();const t=e.scene;w(t);var o=t.getObjectByName("wood_stick_04_wood_stick_04_0");const a=o.geometry;a.rotateY(Math.PI/2),a.computeBoundingBox(),a.boundingBox.getCenter(g),a.translate(-g.x,-g.y,-g.z),a.boundingBox.getSize(g);e=.4/g.y;a.scale(e,e,e),a.computeBoundingBox();const n=new THREE.Mesh(a,o.material);n.receiveShadow=!0,n.castShadow=!0,n.position.set(0,2,0),this.scene.add(n),a.boundingBox.getSize(g),E.setValue(g.x/2,g.y/2,g.z/2);var o=new Ammo.btCylinderShapeX(E),i=new y(0,o,n);this.world.addRigidBody(i.rigidBody,1,-1),this.objects.push(i);const r=new THREE.MeshStandardMaterial({metalness:0}),s=this.loadingBar.startLoading(),d=this.loadingBar.startLoading(),l=this.loadingBar.startLoading(),h=new THREE.TextureLoader;h.load("./textures/fabric_leather_01_1k_jpg/fabric_leather_01_diff_1k.jpg",e=>{s.end(),r.map=e,r.needsUpdate=!0}),h.load("./textures/fabric_leather_01_1k_jpg/fabric_leather_01_nor_1k.jpg",e=>{d.end(),r.normalMap=e,r.normalMapType=THREE.TangentSpaceNormalMap,r.needsUpdate=!0}),h.load("./textures/fabric_leather_01_1k_jpg/fabric_leather_01_rough_1k.jpg",e=>{l.end(),r.roughnessMap=e,r.needsUpdate=!0});for(let e=0;e<3;e++){var c=new THREE.SphereBufferGeometry(.5,16,16);const u=this.setupSoftBody(c,r,new THREE.Vector3(e-1,1.5),f.HangingBall);u.softbody.getCollisionShape().setMargin(.1),u.softbody.setUserIndex(f.AudioIndex.punch);for(let e=0;e<u.softbody.m_nodes.size();e++){const m=u.softbody.m_nodes.at(e);Math.abs(m.m_x.y()-2)<1e-4&&u.softbody.appendAnchor(e,i.rigidBody,!0,1)}}w(this.scene)})}addWater(){const e=new f.WaterPlane;e.position.set(0,.1,0),this.scene.add(e)}addGrass(){THREE.MathUtils.seededRandom(.93738);var t=(new THREE.Matrix4).makeRotationX(-Math.PI/2).premultiply(i.makeScale(.005,.005,.005));const a=new Array(100);for(let e=0;e<a.length;e++){var o=+THREE.MathUtils.seededRandom()+.2;a[e]=(new THREE.Matrix4).copy(t).premultiply(i.makeScale(1,o,1)).premultiply(i.makeRotationY(THREE.MathUtils.seededRandom()*Math.PI*2)).premultiply(i.makeTranslation(5*(2*THREE.MathUtils.seededRandom()-1),0,5*(2*THREE.MathUtils.seededRandom()-1)))}const n=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/clover_grass/scene.gltf",e=>{n.end();const t=e.scene;t.traverse(e=>{if(e.isMesh){var t=f.GrassWinding.modify(e.material);const o=new THREE.InstancedMesh(e.geometry,t,a.length);o.customDepthMaterial=o.customDistanceMaterial=f.GrassWinding.modify(new THREE.MeshDepthMaterial({map:e.material.map,alphaTest:e.material.alphaTest,depthPacking:THREE.RGBADepthPacking})),o.castShadow=!0,o.receiveShadow=!0;for(let e=0;e<a.length;e++)o.setMatrixAt(e,a[e]);this.scene.add(o)}})})}setupPassControl(){const e=document.createElement("div");e.style.position="absolute",e.style.right="0",e.style.top="0",e.style.backgroundColor="white",e.innerHTML="<div>Pass:</div>";for(var t of this.passes){var o=t[0];const a=t[1],n=document.createElement("div"),i=document.createElement("input");i.type="checkbox",i.checked=a.enabled,i.onchange=e=>{a.enabled=e.target.checked},n.innerHTML=`${o}`,n.appendChild(i),e.appendChild(n)}document.body.appendChild(e)}updateLoop(e){this.timeElapsed+=e;var t,o,a=2*Math.PI*this.timeElapsed/10;this.light.position.set(10*-Math.cos(a),20,10*Math.sin(a)),this.player.update(this,e),this.world.stepSimulation(e),this.traceContact();for(t of this.objects)t.update(e);for(o of this.softBodies)o.update(this,e);this.pointerMove.set(0,0)}traceContact(){const o=this.world.getDispatcher();var t=o.getNumManifolds();for(let e=0;e<t;e++){const s=o.getManifoldByIndexInternal(e);var a,n=s.getNumContacts(),i=s.getBody0(),r=s.getBody1();let t=0;for(let e=0;e<n;e++){const d=s.getContactPoint(e);t+=d.getAppliedImpulse()}0!=n&&(t/=n);for(a of[{a:i,b:r},{a:r,b:i}]){const l=this.contacts.get(a.a)||new WeakMap;l.get(a.b)!=n&&(l.set(a.b,n),this.contacts.set(a.a,l),1<t&&this.audio.playSoundByIndex(a.a.getUserIndex()))}}}render(){this.effectComposer.render(1/60)}onMouseDown(e){this.mousePressed=!0;var t=e.target.getBoundingClientRect();a.set(t.width,t.height),this.pointerPosition.set(e.offsetX,e.offsetY).divide(a).multiplyScalar(2).addScalar(-1).multiply(n)}onMouseUp(e){this.mousePressed=!1,this.pointerMove.set(0,0)}onMouseMove(e){var t=e.target.getBoundingClientRect();a.set(t.width,t.height),this.pointerPosition.set(e.offsetX,e.offsetY).divide(a).multiplyScalar(2).addScalar(-1).multiply(n),this.mousePressed&&(o.set(e.movementX,e.movementY).divideScalar(a.y).multiply(n),this.pointerMove.add(o))}onTouchStart(e){this.mousePressed=!0;var t,o=e.target.getBoundingClientRect();a.set(o.width,o.height);for(t of e.touches)this.pointerPosition.set(t.clientX,t.clientY).divide(a).multiplyScalar(2).addScalar(-1).multiply(n)}onTouchMove(e){var t,o=e.target.getBoundingClientRect();a.set(o.width,o.height);for(t of e.touches)this.pointerPosition.set(t.clientY,t.clientY).divide(a).multiplyScalar(2).addScalar(-1).multiply(n)}onTouchEnd(e){this.mousePressed=!1,this.pointerMove.set(0,0)}onResize(){var e=this.canvas.getBoundingClientRect();this.canvas.width=e.width,this.canvas.height=e.height,this.renderer.setSize(e.width,e.height),this.renderer.setViewport(0,0,e.width,e.height),this.camera.aspect=e.width/e.height,this.camera.updateProjectionMatrix(),this.effectComposer.setSize(e.width,e.height)}}}(hahaApp=hahaApp||{}),function(e){class t{}t.baseballHit=1,t.bottlelHit=2,t.punch=3,t.ar=4,t.star=5,e.AudioIndex=t;e.AudioManager=class{constructor(){this.context=new AudioContext,this.audioBuffers={};const e=this.context.createGain();e.gain.setValueAtTime(.05,0),e.connect(this.context.destination),this.outputNode=e;var t,o={throw:"./sound/419341__wizardoz__swoosh.ogg",baseballHit:"./sound/516974__plucinskicasey__normalpunch.wav",bottlelHit:"./sound/178660__hanbaal__bottle-tink2.wav",punch:"./sound/81042__rock-savage__blood-hitting-window.wav",ar:"./sound/ar.mp3",star:"./sound/522159__magnuswaker__gutsy-spillage-1.wav"};for(t in o){const a=t;this.createBuffer(o[a]).then(e=>{this.audioBuffers[a]=e})}}get rootNode(){return this.outputNode}playSound(e){const t=this.context.createBufferSource();t.buffer=this.audioBuffers[e],t.connect(this.rootNode),t.start()}playSoundByIndex(e){switch(e){case t.baseballHit:this.playSound("baseballHit");break;case t.bottlelHit:this.playSound("bottlelHit");break;case t.punch:this.playSound("punch");break;case t.ar:this.playSound("ar");break;case t.star:this.playSound("star")}}createBuffer(t){return __awaiter(this,void 0,void 0,function*(){var e=yield(yield fetch(t)).arrayBuffer();return this.context.decodeAudioData(e)})}}}(hahaApp=hahaApp||{}),function(e){class t extends THREE.Pass{constructor(e,t){super();var o=void 0!==t.focus?t.focus:1,a=(void 0!==t.aspect?t:e).aspect,n=void 0!==t.aperture?t.aperture:.025,i=void 0!==t.maxblur?t.maxblur:1;this.camera=e;t=THREE.BokehShader;const r=THREE.UniformsUtils.clone(t.uniforms);r.focus.value=o,r.aspect.value=a,r.aperture.value=n,r.maxblur.value=i,r.nearClip.value=e.near,r.farClip.value=e.far,this.materialBokeh=new THREE.ShaderMaterial({defines:window.Object.assign({},t.defines),uniforms:r,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.materialBokeh.defines.DEPTH_PACKING="0",this.uniforms=r,this.needsSwap=!0,this.fsQuad=new THREE.Pass.FullScreenQuad(this.materialBokeh)}render(e,t,o){this.uniforms.tDepth.value=o.depthTexture,this.uniforms.tColor.value=o.texture,this.uniforms.nearClip.value=this.camera.near,this.uniforms.farClip.value=this.camera.far,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),e.clear()),this.fsQuad.render(e)}}e.DofPass=t}(hahaApp=hahaApp||{}),function(o){class e extends o.SoftBody{constructor(e,t,o){super(e,t,o),this.hp=10}update(e,t){super.update(e,t),0<this.hp&&(this.hp=Math.min(10,this.hp+ +t))}onDeform(e,t,o){0<this.hp&&super.onDeform(e,t,o),.2<t&&0<this.hp&&(this.hp-=t,this.hp<=0&&this.onDie(e,o))}onDie(e,t){this.softbody.m_cfg.kPR=0,e.audio.playSound("star"),o.Stars.explodStar(e,t.clone())}}o.HangingBall=e}(hahaApp=hahaApp||{}),function(t){t.InfoPanel=class{constructor(){const e=document.createElement("div");e.style.position="absolute",e.style.top="4px",e.style.right="4px",e.style.borderRadius="4px",e.style.padding="8px",e.style.backgroundColor="white",e.style.fontFamily="Arial, Helvetica, sans-serif",e.style.userSelect="none",e.style.textAlign="right",e.innerHTML=`
            ⓘ<br/>
            <div name="content">
            <table>
            <tr>
            <td><b>Version:</b></td>
            <td>${t.config.version}</td>
            </tr>
            <tr>
            <td><b>Author:</b></td>
            <td>${t.config.author}}</td>
            </tr>
            <tr>
            <td><b>Source Code:</b></td>
            <td><a name="link">${t.config.projectUrl}</a></td>
            </tr>
            </table>
            </div>
            `,this.htmlElement=e,this.content=e.querySelector("div[name=content]"),e.addEventListener("mousedown",e=>{this.onPress()}),e.addEventListener("touchstart",e=>{this.onPress()}),e.querySelector("a[name=link]").addEventListener("mousedown",e=>{open("https://github.com/danborutori/Softbody-Demo","new"),e.stopPropagation()}),this.onPress()}onPress(){this.content.parentElement===this.htmlElement?this.htmlElement.removeChild(this.content):this.htmlElement.appendChild(this.content)}}}(hahaApp=hahaApp||{}),function(e){e.LoadingBar=class{constructor(){this.loadingCount=0;const e=document.createElement("div");e.style.backgroundColor="white",e.style.position="absolute",e.style.top="50%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",e.style.padding="8px",e.style.fontFamily="Arial, Helvetica, sans-serif",e.style.borderRadius="4px",e.style.visibility="hidden",e.style.userSelect="none",e.innerHTML="Loading...",this.htmlElement=e}startLoading(){return this.loadingCount++,this.htmlElement.style.visibility="visible",{end:()=>{0==--this.loadingCount&&(this.htmlElement.style.visibility="hidden")}}}}}(hahaApp=hahaApp||{}),function(i){let r;const a=new Ammo.btSphereShape(.2),n=new Ammo.btVector3;a.calculateLocalInertia(1,n);const s=new THREE.Matrix4,d=new THREE.Matrix4,l=new THREE.Vector3,h=new THREE.Vector4,c=new Ammo.btVector3;i.Player=class{constructor(){this.object3D=new THREE.Object3D,this.fireBallCooldown=0,this.circling={angle:0,distance:5}}static init(){return __awaiter(this,void 0,void 0,function*(){return new Promise((n,e)=>{(new THREE.GLTFLoader).load("./models/worn_baseball_ball/scene.gltf",e=>{const t=e.scene;i.setAnisotropic(t);var o=t.getObjectByName("polySurface5_lambert1_0"),e=o.material;const a=o.geometry;a.computeBoundingSphere(),l.copy(a.boundingSphere.center).negate();o=.2/a.boundingSphere.radius;a.translate(l.x,l.y,l.z).scale(o,o,o),r={material:e,geometry:a},n()},void 0,e)})})}update(e,t){this.movement(e,t),this.firingBalls(e,t)}movement(e,t){this.object3D.position.set(Math.sin(this.circling.angle)*this.circling.distance,0,-Math.cos(this.circling.angle)*this.circling.distance),e.camera.lookAt(0,0,0)}firingBalls(e,t){this.fireBallCooldown-=t,e.mousePressed&&this.fireBallCooldown<0&&(this.fireBall(e),this.fireBallCooldown=.02)}fireBall(e){if(null!=r){s.multiplyMatrices(e.camera.projectionMatrix,e.camera.matrixWorldInverse),d.copy(s).invert(),h.set(e.pointerPosition.x,e.pointerPosition.y,0,1),h.applyMatrix4(d),h.divideScalar(h.w);const t=new THREE.Mesh(r.geometry,r.material);t.castShadow=!0,t.receiveShadow=!0,t.position.set(h.x,h.y,h.z),t.quaternion.set(Math.random(),Math.random(),Math.random(),Math.random()).normalize(),e.scene.add(t);const o=new i.Object(1,a,t,n);l.setFromMatrixPosition(e.camera.matrixWorld).sub(t.position).multiplyScalar(-1),l.x+=.01*Math.random(),l.y+=.01*Math.random(),l.z+=.01*Math.random(),l.normalize().multiplyScalar(30),c.setValue(l.x,l.y,l.z),o.rigidBody.setLinearVelocity(c),o.rigidBody.setUserIndex(i.AudioIndex.baseballHit),e.world.addRigidBody(o.rigidBody,1,-1),e.objects.push(o),e.hud.numObjects=e.objects.length,e.audio.playSound("throw")}}}}(hahaApp=hahaApp||{}),function(s){const d=new THREE.Matrix4,o=new THREE.Matrix4,a=new THREE.Quaternion,l=new Ammo.btVector3,n=new Ammo.btTransform,e=new Promise((r,e)=>(new THREE.GLTFLoader).load("./models/gold_star/scene.gltf",e=>{const t=e.scene;var o=t.getObjectByName("Star_Gold_0");const a=o.geometry;a.computeBoundingBox();var n=a.boundingBox.getCenter(new THREE.Vector3),e=a.boundingBox.getSize(new THREE.Vector3),e=new THREE.Vector3(.8,.8,.4).divide(e);a.translate(-n.x,-n.y,-n.z).scale(e.x,e.y,e.z),a.computeBoundingBox();const i=s.btConvexHullShapeFromGeometry(a);e=new Ammo.btVector3;i.calculateLocalInertia(1,e),r({geometry:o.geometry,material:o.material,collisionShape:i,localInteria:e})},void 0,e));class h extends s.Object{constructor(e,t,o,a,n,i){super(o,a,n,i),this.instancedMesh=e,this.index=t}sync(){this.motionState.getWorldTransform(n);const e=n.getOrigin(),t=n.getRotation();d.makeRotationFromQuaternion(a.set(t.x(),t.y(),t.z(),t.w())).premultiply(o.makeTranslation(e.x(),e.y(),e.z())),this.instancedMesh.setMatrixAt(this.index,d),this.instancedMesh.instanceMatrix.needsUpdate=!0}}s.Stars=class{static explodStar(i,r){return __awaiter(this,void 0,void 0,function*(){var t=yield e;const o=new THREE.InstancedMesh(t.geometry,t.material,6);for(let e=0;e<6;e++){const a=new THREE.Object3D;a.position.copy(r),a.quaternion.set(2*Math.random()-1,2*Math.random()-1,2*Math.random()-1,2*Math.random()-1).normalize();const n=new h(o,e,1,t.collisionShape,a,t.localInteria);l.setX(5*(2*Math.random()-1)),l.setY(5*(2*Math.random()-1)),l.setZ(5*(2*Math.random()-1)),n.rigidBody.setLinearVelocity(l);l.setX(5*(2*Math.random()-1)),l.setY(5*(2*Math.random()-1)),l.setZ(5*(2*Math.random()-1)),n.rigidBody.setAngularVelocity(l),i.world.addRigidBody(n.rigidBody),i.objects.push(n),d.makeTranslation(r.x,r.y,r.z),o.setMatrixAt(e,d)}i.scene.add(o)})}}}(hahaApp=hahaApp||{}),function(e){const d=new THREE.Vector2(0,0),l=new THREE.Matrix4,h=new THREE.Vector2;THREE.ShaderChunk.quaternion=`

        vec4 quaternionFromUnitVectors( vec3 vFrom, vec3 vTo ){
            // assumes direction vectors vFrom and vTo are normalized

            vec4 q;

            float EPS = 0.000001;

            float r = dot(vFrom, vTo ) + 1.0;

            if ( r < EPS ) {

                r = 0.0;

                if ( abs( vFrom.x ) > abs( vFrom.z ) ) {

                    q.x = - vFrom.y;
                    q.y = vFrom.x;
                    q.z = 0.0;
                    q.w = r;

                } else {

                    q.x = 0.0;
                    q.y = - vFrom.z;
                    q.z = vFrom.y;
                    q.w = r;

                }

            } else {

                // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3

                q.x = vFrom.y * vTo.z - vFrom.z * vTo.y;
                q.y = vFrom.z * vTo.x - vFrom.x * vTo.z;
                q.z = vFrom.x * vTo.y - vFrom.y * vTo.x;
                q.w = r;

            }

            return normalize(q);

        }

        vec3 applyQuaternion( vec3 v, vec4 q ){
            vec3 result;
            
            float x = v.x, y = v.y, z = v.z;
            float qx = q.x, qy = q.y, qz = q.z, qw = q.w;
    
            // calculate quat * vector
    
            float ix = qw * x + qy * z - qz * y;
            float iy = qw * y + qz * x - qx * z;
            float iz = qw * z + qx * y - qy * x;
            float iw = - qx * x - qy * y - qz * z;
    
            // calculate result * inverse quat
    
            result.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;
            result.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;
            result.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;
    
            return result;
        }

    `;class t extends THREE.MeshStandardMaterial{constructor(){super({transparent:!0,blending:THREE.NoBlending}),this.uniforms={tFramebuffer:{value:null},framebufferSize:{value:new THREE.Vector2(0,0)},waterTransforms:{value:[new THREE.Matrix4,new THREE.Matrix4,new THREE.Matrix4]},time:{value:0}};const e=this.defines||(this.defines={});e.WATER_TRANSFORM_COUNT=this.uniforms.waterTransforms.value.length.toString();const o=this.onBeforeCompile;this.onBeforeCompile=(e,t)=>{o(e,t),e.uniforms.tFramebuffer=this.uniforms.tFramebuffer,e.uniforms.framebufferSize=this.uniforms.framebufferSize,e.uniforms.waterTransforms=this.uniforms.waterTransforms,e.uniforms.time=this.uniforms.time,e.vertexShader=`
                    uniform float time;
                `+e.vertexShader.replace("#include <project_vertex>",`

                    float phase = PI*2.0*(transformed.x/2.0+time);
                    transformed.y += (cos( phase ) - sin(  phase ))*0.01;

                    #include <project_vertex>
                    `),e.fragmentShader=`
                    #include <quaternion>

                    uniform sampler2D tFramebuffer;
                    uniform vec2 framebufferSize;
                    uniform mat4 waterTransforms[WATER_TRANSFORM_COUNT];
                `+e.fragmentShader.replace("#include <normal_fragment_maps>",`
                    #ifdef USE_UV
                    vec3 n = vec3(0,0,0);
                    for( int i=0; i<WATER_TRANSFORM_COUNT; i++  ){
                        vec2 uv = (waterTransforms[i]*vec4(vUv,0,1)).xy;
                        n += texture2D( normalMap, uv ).rgb*2.0-1.0;
                    }
                    n = normalize( n );

                    vec4 q = quaternionFromUnitVectors( vec3(0,0,1),  normal );
                    normal = applyQuaternion( n, q );
                    #endif
                    `).replace("#include <dithering_fragment>",`
                    #include <dithering_fragment>

                    vec2 framebufferUV = gl_FragCoord.xy/framebufferSize;

                    vec2 offset = normalize(refract( normalize(-vViewPosition), normal, 1.0/1.33 )).xy*0.01;

                    framebufferUV += offset;
                    vec4 framebufferColor = texture2D( tFramebuffer, framebufferUV );

                    gl_FragColor.rgb = mix( gl_FragColor.rgb, framebufferColor.xyz, 0.9 );

                    `)};const t=new THREE.TextureLoader;t.load("./textures/9110-normal.jpg",e=>{e.wrapS=THREE.RepeatWrapping,e.wrapT=THREE.RepeatWrapping,e.anisotropy=16,e.generateMipmaps=!0,e.minFilter=THREE.LinearMipMapLinearFilter,e.magFilter=THREE.LinearFilter,e.needsUpdate=!0,this.normalMap=e,this.needsUpdate=!0})}}class o extends THREE.Mesh{constructor(){const i=new THREE.Vector2(0,0);let r;const s=new t;super(new THREE.PlaneBufferGeometry(10,10,50,50).rotateX(-Math.PI/2),s),this.onBeforeRender=(e,t,o)=>{e.getDrawingBufferSize(h),(i.x<h.x||i.y<h.y)&&(i.x=THREE.Math.ceilPowerOfTwo(h.x),i.y=THREE.Math.ceilPowerOfTwo(h.y),r=new THREE.DataTexture(null,i.x,i.y,THREE.RGBAFormat,THREE.UnsignedByteType,THREE.UVMapping,THREE.ClampToEdgeWrapping,THREE.ClampToEdgeWrapping,THREE.LinearFilter,THREE.LinearFilter,16),r.needsUpdate=!0,s.uniforms.tFramebuffer.value=r,s.uniforms.framebufferSize.value.copy(i));const a=e.copyFramebufferToTexture;a(d,r);const n=s.uniforms.waterTransforms.value;for(let e=0;e<n.length;e++)n[e].makeTranslation(.5*performance.now()/1e3,0,0).multiply(l.makeRotationZ(e*Math.PI*4/3)).multiply(l.makeScale(5,5,5));s.uniforms.time.value=performance.now()/1e3},this.receiveShadow=!0,this.castShadow=!1}}e.WaterPlane=o}(hahaApp=hahaApp||{}),function(e){const r=new Ammo.btVector3;e.btConvexHullShapeFromGeometry=function(e){const t=new THREE.ConvexHull;t.setFromObject(new THREE.Mesh(e));const o=new Ammo.btConvexHullShape;var a=t.faces;for(let t=0;t<a.length;t++){var n=a[t];let e=n.edge;do{var i=e.head().point;r.setValue(i.x,i.y,i.z),o.addPoint(r),e=e.next}while(e!==n.edge)}return o.setMargin(.005),o}}(hahaApp=hahaApp||{}),(hahaApp=hahaApp||{}).config={version:"1.0.4",author:"ANMCダンボールとり",projectUrl:"https://github.com/danborutori/Softbody-Demo"},function(e){class t extends THREE.Mesh{constructor(){super(new THREE.PlaneBufferGeometry(2,2),new THREE.ShaderMaterial({uniforms:{tDepth:{value:null},clipNear:{value:0},clipFar:{value:0}},vertexShader:`
                        varying vec2 vUv;

                        void main(){
                            vUv = uv;
                            gl_Position = vec4(position, 1);
                        }
                    `,fragmentShader:`
                        #include <packing>

                        uniform sampler2D tDepth;
                        uniform float clipNear;
                        uniform float clipFar;

                        varying vec2 vUv;

                        void main(){
                            float depth = texture2D(tDepth, vUv).r;
                            float viewZ = perspectiveDepthToViewZ(depth, clipNear, clipFar);
                            float opacity = clamp(abs(dFdx(viewZ))/0.1, 0.0, 1.0);
                            vec3 lineColor = vec3(1,0,0);
                            gl_FragColor = vec4(lineColor, opacity);
                        }
                    `,transparent:!0,depthTest:!1,depthWrite:!1,blending:THREE.NormalBlending})),this.depthRenderTarget=new THREE.WebGLRenderTarget(1024,1024,{format:THREE.RedFormat,type:THREE.FloatType,generateMipmaps:!1,depthBuffer:!1,stencilBuffer:!1}),this.fsQuad=new THREE.Pass.FullScreenQuad(new THREE.ShaderMaterial({uniforms:{tDiffuse:{value:null}},vertexShader:`
                varying vec2 vUv;

                void main(){
                    vUv = uv;
                    gl_Position = vec4(position, 1);
                }
            `,fragmentShader:`
                uniform sampler2D tDiffuse;

                varying vec2 vUv;

                void main(){

                    gl_FragColor = texture2D( tDiffuse, vUv );

                }
            `})),this.renderOrder=1,this.frustumCulled=!1,this.material.uniforms.tDepth.value=this.depthRenderTarget.texture,this.onBeforeRender=(e,t,o)=>{var a={renderTarget:e.getRenderTarget()};this.fsQuad.material.uniforms.tDiffuse.value=a.renderTarget.depthTexture,e.setRenderTarget(this.depthRenderTarget),this.fsQuad.render(e),this.material.uniforms.clipNear.value=o.near,this.material.uniforms.clipFar.value=o.far,e.setRenderTarget(a.renderTarget)}}}e.OutlinePlane=t}(hahaApp=hahaApp||{}),function(e){const a={value:performance.now()/1e3};setInterval(()=>{a.value+=1/60},1e3/60);e.GrassWinding=class{static modify(e){const t=e.defines||(e.defines={});t.GRASS_WINDING="1";const o=e.onBeforeCompile;return e.onBeforeCompile=(e,t)=>{o(e,t),e.uniforms.grassWindTime=a,e.vertexShader=`
                    uniform float grassWindTime;
                `+e.vertexShader.replace("#include <project_vertex>",`
                    #include <project_vertex>

                    float phaseX = ( mvPosition.x + grassWindTime/3.0 ) * PI * 2.0;
                    float phaseZ = ( mvPosition.z + grassWindTime/3.0 ) * PI * 2.0;
                    float str = mvPosition.y*0.01;
                    mvPosition.x += cos( phaseX )*str;
                    mvPosition.z -= sin( phaseZ )*str;

                    gl_Position = projectionMatrix * mvPosition;
                    `)},e}}}(hahaApp=hahaApp||{}),function(e){e.HUD=class{constructor(){this._fps=0,this._numObjects=0,this.domElement=document.createElement("div"),this.domElement.style.position="absolute",this.domElement.style.left="10",this.domElement.style.top="10",this.domElement.style.userSelect="none"}set fps(e){this._fps=e,this.update()}set numObjects(e){this._numObjects=e,this.update()}update(){this.domElement.innerHTML=`<font color="white">FPS: ${this._fps}</font>`}}}(hahaApp=hahaApp||{});