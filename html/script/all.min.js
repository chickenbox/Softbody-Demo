var hahaApp,__awaiter=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))(function(s,i){function a(e){try{d(o.next(e))}catch(e){i(e)}}function r(e){try{d(o.throw(e))}catch(e){i(e)}}function d(e){e.done?s(e.value):new n(function(t){t(e.value)}).then(a,r)}d((o=o.apply(e,t||[])).next())})};!function(e){const t=new Ammo.btTransform,n=new Ammo.btVector3,o=new Ammo.btQuaternion(1,0,0,0),s=new THREE.Matrix4,i=new THREE.Matrix4,a=new THREE.Vector3,r=new THREE.Quaternion,d=new THREE.Quaternion;e.Object=class{constructor(e,i,d,l){this.mass=e,this.collisionShape=i,this.object3D=d,this.object3D.updateMatrixWorld(),a.setFromMatrixPosition(this.object3D.matrixWorld),r.setFromRotationMatrix(s.extractRotation(this.object3D.matrixWorld)),n.setValue(a.x,a.y,a.z),o.setValue(r.x,r.y,r.z,r.w),t.setOrigin(n),t.setRotation(o);const c=new Ammo.btDefaultMotionState(t);l||0==e||(i.calculateLocalInertia(e,n),l=n);const h=new Ammo.btRigidBodyConstructionInfo(e,c,i,0!=e?l:void 0);this.motionState=c,this.rigidBody=new Ammo.btRigidBody(h),0==e&&this.rigidBody.setCollisionFlags(1)}update(e){this.sync()}sync(){if(0!=this.mass){this.motionState.getWorldTransform(t);const e=t.getRotation(),n=t.getOrigin();a.set(n.x(),n.y(),n.z()),r.set(e.x(),e.y(),e.z(),e.w()),this.object3D.parent&&(s.copy(this.object3D.parent.matrixWorld).invert(),d.setFromRotationMatrix(i.extractRotation(s)),r.premultiply(d),a.applyMatrix4(s)),this.object3D.quaternion.copy(r),this.object3D.position.copy(a)}}updateRigidBodyTransform(){a.setFromMatrixPosition(this.object3D.matrixWorld),r.setFromRotationMatrix(s.extractRotation(this.object3D.matrixWorld)),n.setValue(a.x,a.y,a.z),o.setValue(r.x,r.y,r.z,r.w),t.setOrigin(n),t.setRotation(o),this.rigidBody.setWorldTransform(t),this.motionState.setWorldTransform(t)}}}(hahaApp||(hahaApp={})),function(e){const t=new THREE.Vector2,n=new THREE.Vector2,o=new THREE.Vector3,s=(new THREE.Vector4,new THREE.Vector2(1,-1)),i=new THREE.Matrix4,a=(new THREE.Matrix4,new Ammo.btVector3),r=new Ammo.btTransform;class d extends e.Object{update(e){super.update(e),this.object3D.rotateY(Math.PI*e/10),this.object3D.updateMatrixWorld(),this.updateRigidBodyTransform()}}function l(e){e.traverse(e=>{if(e.isMesh){const t=e.material;if(t instanceof THREE.MeshStandardMaterial){for(let e of[t.map,t.normalMap,t.roughnessMap,t.metalnessMap])e&&16!=e.anisotropy&&(e.anisotropy=16,e.needsUpdate=!0);t.side==THREE.DoubleSide&&(t.side=THREE.FrontSide,t.needsUpdate=!0)}}})}e.setAnisotropic=l;e.App=class{constructor(t){this.canvas=t,this.hud=new e.HUD,this.loadingBar=new e.LoadingBar,this.objects=[],this.softBodies=[],this.passes=new Map,this.timeElapsed=0,this.mousePressed=!1,this.pointerMove=new THREE.Vector2,this.pointerPosition=new THREE.Vector2,this.fpsCounter=0,this.player=new e.Player,this.audio=new e.AudioManager,this.contacts=new WeakMap;let n=t.getBoundingClientRect();t.width=n.width,t.height=n.height;const o=t.getContext("webgl2",{});this.renderer=new THREE.WebGLRenderer({context:o}),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=THREE.PCFSoftShadowMap,this.renderer.setSize(n.width,n.height),this.renderer.setClearColor("#0000ff"),this.effectComposer=new THREE.EffectComposer(this.renderer),this.effectComposer.renderTarget1.depthTexture=new THREE.DepthTexture(n.width,n.height),this.effectComposer.renderTarget2.depthTexture=new THREE.DepthTexture(n.width,n.height),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(50,n.width/n.height);const s=new THREE.RenderPass(this.scene,this.camera);this.effectComposer.addPass(s);const i=new e.DofPass(this.camera,{focus:2.5,maxblur:.005,aperture:3});this.effectComposer.addPass(i);const a=new THREE.SMAAPass(n.width,n.height);this.effectComposer.addPass(a);const r=new THREE.UnrealBloomPass(new THREE.Vector2(n.width,n.height),.2);this.effectComposer.addPass(r),this.passes.set("smaa",a),this.passes.set("dof",i),this.passes.set("bloom",r),t.addEventListener("mousedown",e=>{this.onMouseDown(e)}),t.addEventListener("mouseup",e=>{this.onMouseUp(e)}),t.addEventListener("mousemove",e=>{this.onMouseMove(e)}),t.addEventListener("touchstart",e=>{this.onTouchStart(e)}),t.addEventListener("touchmove",e=>{this.onTouchMove(e)}),t.addEventListener("touchend",e=>{this.onTouchEnd(e)}),t.addEventListener("touchcancel",e=>{}),document.body.appendChild(this.hud.domElement),document.body.appendChild(this.loadingBar.htmlElement),document.body.appendChild((new e.InfoPanel).htmlElement)}init(){this.setupAmmo(),this.setupScene();const t=this.loadingBar.startLoading();return e.Player.init().then(()=>t.end()),window.addEventListener("resize",()=>{this.onResize()}),this.hud.numObjects=this.objects.length,this}start(){let e=!1;return setInterval(()=>{this.updateLoop(1/60),e||(e=!0,requestAnimationFrame(()=>{e=!1,this.render(),this.fpsCounter+=1}))},1e3/60),setInterval(()=>{this.hud.fps=this.fpsCounter,this.fpsCounter=0},1e3),this}setupScene(){this.scene.add(this.camera),this.scene.add(this.player.object3D);const t=new THREE.TextureLoader,n=this.loadingBar.startLoading();Promise.all([new Promise((e,n)=>t.load("./textures/dirty_concrete_1k_jpg/dirty_concrete_diff_1k.jpg",t=>e(t),void 0,e=>n(e))),new Promise((e,n)=>t.load("./textures/dirty_concrete_1k_jpg/dirty_concrete_nor_1k.jpg",t=>e(t),void 0,e=>n(e))),new Promise((e,n)=>t.load("./textures/dirty_concrete_1k_jpg/dirty_concrete_rough_1k.jpg",t=>e(t),void 0,e=>n(e)))]).then(e=>{n.end();const t=e[0],o=e[1],i=e[2];e.forEach(e=>{e.anisotropy=16,e.needsUpdate=!0}),s.map=t,s.normalMap=o,s.normalMapType=THREE.TangentSpaceNormalMap,s.roughnessMap=i,s.needsUpdate=!0});const s=new THREE.MeshStandardMaterial({metalness:0,side:THREE.BackSide}),i=new THREE.Mesh(new THREE.BoxBufferGeometry(10,10,10),s);i.position.set(0,5,0),i.castShadow=!1,i.receiveShadow=!0,this.scene.add(i),a.setValue(5,5,5);const d=new Ammo.btCompoundShape;r.setIdentity(),a.setValue(0,-5.5,0),r.setOrigin(a),a.setValue(5,.5,5),d.addChildShape(r,new Ammo.btBoxShape(a)),r.setIdentity(),a.setValue(0,5.5,0),r.setOrigin(a),a.setValue(5,.5,5),d.addChildShape(r,new Ammo.btBoxShape(a)),r.setIdentity(),a.setValue(5.5,0,0),r.setOrigin(a),a.setValue(.5,5,5),d.addChildShape(r,new Ammo.btBoxShape(a)),r.setIdentity(),a.setValue(-5.5,0,0),r.setOrigin(a),a.setValue(.5,5,5),d.addChildShape(r,new Ammo.btBoxShape(a)),r.setIdentity(),a.setValue(0,0,-5.5),r.setOrigin(a),a.setValue(5,5,.5),d.addChildShape(r,new Ammo.btBoxShape(a)),r.setIdentity(),a.setValue(0,0,5.5),r.setOrigin(a),a.setValue(5,5,.5),d.addChildShape(r,new Ammo.btBoxShape(a));const c=new e.Object(0,d,i);this.world.addRigidBody(c.rigidBody,1,4294967295),this.objects.push(c),this.camera.position.set(0,2,0),this.camera.up.set(0,1,0),this.player.object3D.add(this.camera);const h=new THREE.SpotLight(new THREE.Color(.9,.9,.9));h.angle=Math.PI/8,h.penumbra=.2,h.shadow.mapSize.set(1024,1024),h.shadow.camera.fov=h.angle,h.target=new THREE.Object3D,h.castShadow=!0,this.scene.add(h),this.light=h;const u=new THREE.AmbientLight(new THREE.Color(.2,.2,.2));this.scene.add(u),this.scene.fog=new THREE.Fog(0,5,12),this.setupTargets();const m=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/corgishiba_texturing_challenge/scene.gltf",t=>{m.end();const n=t.scene;l(n);let s=0;n.traverse(t=>{if(t.isMesh){if(1==s){const n=t.geometry;n.computeBoundingSphere(),o.copy(n.boundingSphere.center).negate();const s=1/n.boundingSphere.radius;n.translate(o.x,o.y,o.z).scale(s,s,s).rotateY(Math.PI);const i=t.material;i.side=THREE.FrontSide,i.depthWrite=!0,i.needsUpdate=!0,this.setupSoftBody(n,i,new THREE.Vector3(0,1,-2)).softbody.setUserIndex(e.AudioIndex.ar)}s++}})}),this.addHangingBall(),this.addGrass()}setupAmmo(){const e=new Ammo.btSoftBodyRigidBodyCollisionConfiguration,t=new Ammo.btCollisionDispatcher(e),n=new Ammo.btDbvtBroadphase,o=new Ammo.btSequentialImpulseConstraintSolver,s=new Ammo.btDefaultSoftBodySolver,i=new Ammo.btSoftRigidDynamicsWorld(t,n,o,e,s);this.world=i}setupTargets(){const t=[new THREE.Vector3(0,0,0),new THREE.Vector3(-.5,0,1),new THREE.Vector3(.5,0,1),new THREE.Vector3(-1,0,2),new THREE.Vector3(0,0,2),new THREE.Vector3(1,0,2),new THREE.Vector3(-1.5,0,3),new THREE.Vector3(-.5,0,3),new THREE.Vector3(.5,0,3),new THREE.Vector3(1.5,0,3),new THREE.Vector3(-2,0,4),new THREE.Vector3(-1,0,4),new THREE.Vector3(0,0,4),new THREE.Vector3(1,0,4),new THREE.Vector3(2,0,4)],n=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/bottle_old_wine/scene.gltf",s=>{n.end();const i=s.scene;l(i);const r=i.getObjectByName("bottle_05L_1_03_-_Default_0");let d=r.geometry;d.rotateX(-Math.PI/2),d.computeBoundingBox(),d.boundingBox.getCenter(o),d.translate(-o.x,-o.y,-o.z),d.boundingBox.getSize(o);const c=.4/o.x;d.scale(c,c,c),d.computeBoundingBox();const h=r.material,u=new THREE.ConvexHull;u.setFromObject(new THREE.Mesh(d));const m=new Ammo.btConvexHullShape,p=u.faces;for(let e=0;e<p.length;e++){const t=p[e];let n=t.edge;do{const e=n.head().point;a.setValue(e.x,e.y,e.z),m.addPoint(a),n=n.next}while(n!==t.edge)}m.setMargin(.005);const f=new Ammo.btVector3;m.calculateLocalInertia(1,f);const E=d.boundingBox.getSize(o).y;t.forEach(e=>{e.add(new THREE.Vector3(0,.5,-2.5)).multiply(new THREE.Vector3(.96,E,.8))});for(let n of t){const t=new THREE.Mesh(d,h);t.castShadow=!0,t.receiveShadow=!0,t.position.copy(n),this.scene.add(t);const o=new e.Object(1,m,t,f);o.rigidBody.setUserIndex(e.AudioIndex.bottlelHit),this.world.addRigidBody(o.rigidBody,1,-1),this.objects.push(o)}Ammo.destroy(f)})}setupSoftBody(t,n,o){const s=new e.SoftBody(this.world.getWorldInfo(),t.clone().translate(o.x,o.y,o.z)),i=new THREE.Mesh(s.geometry,n);return i.receiveShadow=!0,i.castShadow=!0,this.scene.add(i),this.world.addSoftBody(s.softbody,1,-1),this.softBodies.push(s),s}addHangingBall(){const t=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/wood_stick_04/scene.gltf",n=>{t.end();const s=n.scene;l(s);const i=s.getObjectByName("wood_stick_04_wood_stick_04_0"),r=i.geometry;r.rotateY(Math.PI/2),r.computeBoundingBox(),r.boundingBox.getCenter(o),r.translate(-o.x,-o.y,-o.z),r.boundingBox.getSize(o);const c=.4/o.y;r.scale(c,c,c),r.computeBoundingBox();const h=new THREE.Mesh(r,i.material);h.receiveShadow=!0,h.castShadow=!0,h.position.set(0,2,0),this.scene.add(h),r.boundingBox.getSize(o),a.setValue(o.x/2,o.y/2,o.z/2);const u=new Ammo.btCylinderShapeX(a),m=new d(0,u,h);this.world.addRigidBody(m.rigidBody,1,-1),this.objects.push(m);const p=new THREE.MeshStandardMaterial({metalness:0}),f=this.loadingBar.startLoading(),E=this.loadingBar.startLoading(),g=this.loadingBar.startLoading(),w=new THREE.TextureLoader;w.load("./textures/fabric_leather_01_1k_jpg/fabric_leather_01_diff_1k.jpg",e=>{f.end(),p.map=e,p.needsUpdate=!0}),w.load("./textures/fabric_leather_01_1k_jpg/fabric_leather_01_nor_1k.jpg",e=>{E.end(),p.normalMap=e,p.normalMapType=THREE.TangentSpaceNormalMap,p.needsUpdate=!0}),w.load("./textures/fabric_leather_01_1k_jpg/fabric_leather_01_rough_1k.jpg",e=>{g.end(),p.roughnessMap=e,p.needsUpdate=!0});for(let t=0;t<3;t++){const n=new THREE.SphereBufferGeometry(.5,16,16),o=this.setupSoftBody(n,p,new THREE.Vector3(t-1,1.5));o.softbody.getCollisionShape().setMargin(.1),o.softbody.setUserIndex(e.AudioIndex.punch);for(let e=0;e<o.softbody.m_nodes.size();e++){const t=o.softbody.m_nodes.at(e);Math.abs(t.m_x.y()-2)<1e-4&&o.softbody.appendAnchor(e,m.rigidBody,!0,1)}}l(this.scene)})}addWater(){const t=new e.WaterPlane;t.position.set(0,.1,0),this.scene.add(t)}addGrass(){THREE.MathUtils.seededRandom(.93738);const t=(new THREE.Matrix4).makeRotationX(-Math.PI/2).premultiply(i.makeScale(.005,.005,.005)),n=new Array(100);for(let e=0;e<n.length;e++){const o=1*THREE.MathUtils.seededRandom()+.2;n[e]=(new THREE.Matrix4).copy(t).premultiply(i.makeScale(1,o,1)).premultiply(i.makeRotationY(THREE.MathUtils.seededRandom()*Math.PI*2)).premultiply(i.makeTranslation(5*(2*THREE.MathUtils.seededRandom()-1),0,5*(2*THREE.MathUtils.seededRandom()-1)))}const o=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/clover_grass/scene.gltf",t=>{o.end(),t.scene.traverse(t=>{if(t.isMesh){const o=e.GrassWinding.modify(t.material),s=new THREE.InstancedMesh(t.geometry,o,n.length);s.customDepthMaterial=s.customDistanceMaterial=e.GrassWinding.modify(new THREE.MeshDepthMaterial({map:t.material.map,alphaTest:t.material.alphaTest,depthPacking:THREE.RGBADepthPacking})),s.castShadow=!0,s.receiveShadow=!0;for(let e=0;e<n.length;e++)s.setMatrixAt(e,n[e]);this.scene.add(s)}})})}setupPassControl(){const e=document.createElement("div");e.style.position="absolute",e.style.right="0",e.style.top="0",e.style.backgroundColor="white",e.innerHTML="<div>Pass:</div>";for(let t of this.passes){const n=t[0],o=t[1],s=document.createElement("div"),i=document.createElement("input");i.type="checkbox",i.checked=o.enabled,i.onchange=(e=>{o.enabled=e.target.checked}),s.innerHTML=`${n}`,s.appendChild(i),e.appendChild(s)}document.body.appendChild(e)}updateLoop(e){this.timeElapsed+=e;const t=2*Math.PI*this.timeElapsed/10;this.light.position.set(10*-Math.cos(t),20,10*Math.sin(t)),this.player.update(this,e),this.world.stepSimulation(e),this.traceContact();for(let t of this.objects)t.update(e);for(let t of this.softBodies)t.update(this,e);this.pointerMove.set(0,0)}traceContact(){const e=this.world.getDispatcher(),t=e.getNumManifolds();for(let n=0;n<t;n++){const t=e.getManifoldByIndexInternal(n),o=t.getNumContacts(),s=t.getBody0(),i=t.getBody1();let a=0;for(let e=0;e<o;e++)a+=t.getContactPoint(e).getAppliedImpulse();0!=o&&(a/=o);for(let e of[{a:s,b:i},{a:i,b:s}]){const t=this.contacts.get(e.a)||new WeakMap;t.get(e.b)!=o&&(t.set(e.b,o),this.contacts.set(e.a,t),a>1&&this.audio.playSoundByIndex(e.a.getUserIndex()))}}}render(){this.effectComposer.render(1/60)}onMouseDown(e){this.mousePressed=!0;const t=e.target.getBoundingClientRect();n.set(t.width,t.height),this.pointerPosition.set(e.offsetX,e.offsetY).divide(n).multiplyScalar(2).addScalar(-1).multiply(s)}onMouseUp(e){this.mousePressed=!1,this.pointerMove.set(0,0)}onMouseMove(e){const o=e.target.getBoundingClientRect();n.set(o.width,o.height),this.pointerPosition.set(e.offsetX,e.offsetY).divide(n).multiplyScalar(2).addScalar(-1).multiply(s),this.mousePressed&&(t.set(e.movementX,e.movementY).divideScalar(n.y).multiply(s),this.pointerMove.add(t))}onTouchStart(e){this.mousePressed=!0;const t=e.target.getBoundingClientRect();n.set(t.width,t.height);for(let t of e.touches)this.pointerPosition.set(t.clientX,t.clientY).divide(n).multiplyScalar(2).addScalar(-1).multiply(s)}onTouchMove(e){const t=e.target.getBoundingClientRect();n.set(t.width,t.height);for(let t of e.touches)this.pointerPosition.set(t.clientY,t.clientY).divide(n).multiplyScalar(2).addScalar(-1).multiply(s)}onTouchEnd(e){this.mousePressed=!1,this.pointerMove.set(0,0)}onResize(){const e=this.canvas.getBoundingClientRect();this.canvas.width=e.width,this.canvas.height=e.height,this.renderer.setSize(e.width,e.height),this.renderer.setViewport(0,0,e.width,e.height),this.camera.aspect=e.width/e.height,this.camera.updateProjectionMatrix(),this.effectComposer.setSize(e.width,e.height)}}}(hahaApp||(hahaApp={})),function(e){class t{}t.baseballHit=1,t.bottlelHit=2,t.punch=3,t.ar=4,e.AudioIndex=t;e.AudioManager=class{constructor(){this.context=new AudioContext,this.audioBuffers={};const e=this.context.createGain();e.gain.setValueAtTime(.05,0),e.connect(this.context.destination),this.outputNode=e;const t={throw:"./sound/419341__wizardoz__swoosh.ogg",baseballHit:"./sound/516974__plucinskicasey__normalpunch.wav",bottlelHit:"./sound/178660__hanbaal__bottle-tink2.wav",punch:"./sound/81042__rock-savage__blood-hitting-window.wav",ar:"./sound/ar.mp3"};for(let e in t){const n=e;this.createBuffer(t[n]).then(e=>{this.audioBuffers[n]=e})}}get rootNode(){return this.outputNode}playSound(e){const t=this.context.createBufferSource();t.buffer=this.audioBuffers[e],t.connect(this.rootNode),t.start()}playSoundByIndex(e){switch(e){case t.baseballHit:this.playSound("baseballHit");break;case t.bottlelHit:this.playSound("bottlelHit");break;case t.punch:this.playSound("punch");break;case t.ar:this.playSound("ar")}}createBuffer(e){return __awaiter(this,void 0,void 0,function*(){const t=yield(yield fetch(e)).arrayBuffer();return this.context.decodeAudioData(t)})}}}(hahaApp||(hahaApp={})),function(e){e.config={version:"1.0.4",author:"ANMCダンボールとり",projectUrl:"https://github.com/danborutori/Softbody-Demo"}}(hahaApp||(hahaApp={})),function(e){e.DofPass=class extends THREE.Pass{constructor(e,t){super();const n=void 0!==t.focus?t.focus:1,o=void 0!==t.aspect?t.aspect:e.aspect,s=void 0!==t.aperture?t.aperture:.025,i=void 0!==t.maxblur?t.maxblur:1;this.camera=e;const a=THREE.BokehShader,r=THREE.UniformsUtils.clone(a.uniforms);r.focus.value=n,r.aspect.value=o,r.aperture.value=s,r.maxblur.value=i,r.nearClip.value=e.near,r.farClip.value=e.far,this.materialBokeh=new THREE.ShaderMaterial({defines:window.Object.assign({},a.defines),uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}),this.materialBokeh.defines.DEPTH_PACKING="0",this.uniforms=r,this.needsSwap=!0,this.fsQuad=new THREE.Pass.FullScreenQuad(this.materialBokeh)}render(e,t,n){this.uniforms.tDepth.value=n.depthTexture,this.uniforms.tColor.value=n.texture,this.uniforms.nearClip.value=this.camera.near,this.uniforms.farClip.value=this.camera.far,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),e.clear()),this.fsQuad.render(e)}}}(hahaApp||(hahaApp={})),function(e){const t={value:performance.now()/1e3};setInterval(()=>{t.value+=1/60},1e3/60);e.GrassWinding=class{static modify(e){(e.defines||(e.defines={})).GRASS_WINDING="1";const n=e.onBeforeCompile;return e.onBeforeCompile=((e,o)=>{n(e,o),e.uniforms.grassWindTime=t,e.vertexShader="\n                    uniform float grassWindTime;\n                "+e.vertexShader.replace("#include <project_vertex>","\n                    #include <project_vertex>\n\n                    float phaseX = ( mvPosition.x + grassWindTime/3.0 ) * PI * 2.0;\n                    float phaseZ = ( mvPosition.z + grassWindTime/3.0 ) * PI * 2.0;\n                    float str = mvPosition.y*0.01;\n                    mvPosition.x += cos( phaseX )*str;\n                    mvPosition.z -= sin( phaseZ )*str;\n\n                    gl_Position = projectionMatrix * mvPosition;\n                    ")}),e}}}(hahaApp||(hahaApp={})),function(e){e.HUD=class{constructor(){this._fps=0,this._numObjects=0,this.domElement=document.createElement("div"),this.domElement.style.position="absolute",this.domElement.style.left="10",this.domElement.style.top="10",this.domElement.style.userSelect="none"}set fps(e){this._fps=e,this.update()}set numObjects(e){this._numObjects=e,this.update()}update(){this.domElement.innerHTML=`<font color="white">FPS: ${this._fps}</font>`}}}(hahaApp||(hahaApp={})),function(e){e.InfoPanel=class{constructor(){const t=document.createElement("div");t.style.position="absolute",t.style.top="4px",t.style.right="4px",t.style.borderRadius="4px",t.style.padding="8px",t.style.backgroundColor="white",t.style.fontFamily="Arial, Helvetica, sans-serif",t.style.userSelect="none",t.style.textAlign="right",t.innerHTML=`\n            ⓘ<br/>\n            <div name="content">\n            <table>\n            <tr>\n            <td><b>Version:</b></td>\n            <td>${e.config.version}</td>\n            </tr>\n            <tr>\n            <td><b>Author:</b></td>\n            <td>${e.config.author}}</td>\n            </tr>\n            <tr>\n            <td><b>Source Code:</b></td>\n            <td><a name="link">${e.config.projectUrl}</a></td>\n            </tr>\n            </table>\n            </div>\n            `,this.htmlElement=t,this.content=t.querySelector("div[name=content]"),t.addEventListener("mousedown",e=>{this.onPress()}),t.addEventListener("touchstart",e=>{this.onPress()}),t.querySelector("a[name=link]").addEventListener("mousedown",e=>{open("https://github.com/danborutori/Softbody-Demo","new"),e.stopPropagation()}),this.onPress()}onPress(){this.content.parentElement===this.htmlElement?this.htmlElement.removeChild(this.content):this.htmlElement.appendChild(this.content)}}}(hahaApp||(hahaApp={})),function(e){e.LoadingBar=class{constructor(){this.loadingCount=0;const e=document.createElement("div");e.style.backgroundColor="white",e.style.position="absolute",e.style.top="50%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",e.style.padding="8px",e.style.fontFamily="Arial, Helvetica, sans-serif",e.style.borderRadius="4px",e.style.visibility="hidden",e.style.userSelect="none",e.innerHTML="Loading...",this.htmlElement=e}startLoading(){return this.loadingCount++,this.htmlElement.style.visibility="visible",{end:()=>{0==--this.loadingCount&&(this.htmlElement.style.visibility="hidden")}}}}}(hahaApp||(hahaApp={})),function(e){const t=.02,n=.2,o=1,s=30;let i;const a=new Ammo.btSphereShape(n),r=new Ammo.btVector3;a.calculateLocalInertia(o,r);const d=new THREE.Matrix4,l=new THREE.Matrix4,c=new THREE.Vector3,h=new THREE.Vector4,u=new Ammo.btVector3;e.Player=class{constructor(){this.object3D=new THREE.Object3D,this.fireBallCooldown=0,this.circling={angle:0,distance:5}}static init(){return __awaiter(this,void 0,void 0,function*(){return new Promise((t,o)=>{(new THREE.GLTFLoader).load("./models/worn_baseball_ball/scene.gltf",o=>{const s=o.scene;e.setAnisotropic(s);const a=s.getObjectByName("polySurface5_lambert1_0"),r=a.material,d=a.geometry;d.computeBoundingSphere(),c.copy(d.boundingSphere.center).negate();const l=n/d.boundingSphere.radius;d.translate(c.x,c.y,c.z).scale(l,l,l),i={material:r,geometry:d},t()},void 0,o)})})}update(e,t){this.movement(e,t),this.firingBalls(e,t)}movement(e,t){this.object3D.position.set(Math.sin(this.circling.angle)*this.circling.distance,0,-Math.cos(this.circling.angle)*this.circling.distance),e.camera.lookAt(0,0,0)}firingBalls(e,n){this.fireBallCooldown-=n,e.mousePressed&&this.fireBallCooldown<0&&(this.fireBall(e),this.fireBallCooldown=t)}fireBall(t){if(null==i)return;d.multiplyMatrices(t.camera.projectionMatrix,t.camera.matrixWorldInverse),l.copy(d).invert(),h.set(t.pointerPosition.x,t.pointerPosition.y,0,1),h.applyMatrix4(l),h.divideScalar(h.w);const n=new THREE.Mesh(i.geometry,i.material);n.castShadow=!0,n.receiveShadow=!0,n.position.set(h.x,h.y,h.z),n.quaternion.set(Math.random(),Math.random(),Math.random(),Math.random()).normalize(),t.scene.add(n);const m=new e.Object(o,a,n,r);c.setFromMatrixPosition(t.camera.matrixWorld).sub(n.position).multiplyScalar(-1),c.x+=.01*Math.random(),c.y+=.01*Math.random(),c.z+=.01*Math.random(),c.normalize().multiplyScalar(s),u.setValue(c.x,c.y,c.z),m.rigidBody.setLinearVelocity(u),m.rigidBody.setUserIndex(e.AudioIndex.baseballHit),t.world.addRigidBody(m.rigidBody,1,-1),t.objects.push(m),t.hud.numObjects=t.objects.length,t.audio.playSound("throw")}}}(hahaApp||(hahaApp={})),function(e){const t=1e-4,n=new THREE.Vector3;function o(e){return`${Math.round(e.x/t)},${Math.round(e.y/t)},${Math.round(e.z/t)}`}e.SoftBody=class{constructor(e,s){this.soundCooldown=1,this.geometry=s;const i=function(e){const s=e.clone();for(let e in s.attributes)switch(e){case"position":break;default:s.deleteAttribute(e)}const i=THREE.BufferGeometryUtils.mergeVertices(s,t),a=i.attributes.position,r=i.index,d=new Map;for(let e=0;e<a.count;e++)n.fromBufferAttribute(a,e),d.set(o(n),e);const l=e.attributes.position,c=new Array(l.count);for(let e=0;e<l.count;e++)n.fromBufferAttribute(l,e),c[e]=d.get(o(n));return{position:Array.from(a.array),index:Array.from(r.array),mapping:c}}(s),a=new Ammo.btSoftBodyHelpers;this.softbody=a.CreateFromTriMesh(e,i.position,i.index,i.index.length/3,!0),this.softbody.m_cfg.kPR=5,this.softbody.m_cfg.viterations=10,this.softbody.m_cfg.piterations=10,this.softbody.setTotalMass(.1,!0),this.softbody.getCollisionShape().setMargin(.05),this.mapping=i.mapping,Ammo.destroy(a)}update(e,t){this.soundCooldown-=t;const n=this.geometry.attributes.position,o=this.geometry.attributes.normal,s=n.count,i=new THREE.Vector3,a=new THREE.Vector3;let r=0;for(let e=0;e<s;e++){const t=this.softbody.m_nodes.at(this.mapping[e]),s=t.m_x,d=t.m_n;i.fromBufferAttribute(n,e),a.set(s.x(),s.y(),s.z()),r=Math.max(r,i.distanceTo(a)),n.setXYZ(e,s.x(),s.y(),s.z()),o.setXYZ(e,d.x(),d.y(),d.z())}n.needsUpdate=!0,o.needsUpdate=!0,r>.2&&this.soundCooldown<=0&&(e.audio.playSoundByIndex(this.softbody.getUserIndex()),this.soundCooldown=.5)}}}(hahaApp||(hahaApp={})),function(e){const t=new THREE.Vector2(0,0),n=new THREE.Matrix4,o=new THREE.Vector2;THREE.ShaderChunk.quaternion="\n\n        vec4 quaternionFromUnitVectors( vec3 vFrom, vec3 vTo ){\n            // assumes direction vectors vFrom and vTo are normalized\n\n            vec4 q;\n\n            float EPS = 0.000001;\n\n            float r = dot(vFrom, vTo ) + 1.0;\n\n            if ( r < EPS ) {\n\n                r = 0.0;\n\n                if ( abs( vFrom.x ) > abs( vFrom.z ) ) {\n\n                    q.x = - vFrom.y;\n                    q.y = vFrom.x;\n                    q.z = 0.0;\n                    q.w = r;\n\n                } else {\n\n                    q.x = 0.0;\n                    q.y = - vFrom.z;\n                    q.z = vFrom.y;\n                    q.w = r;\n\n                }\n\n            } else {\n\n                // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n                q.x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n                q.y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n                q.z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n                q.w = r;\n\n            }\n\n            return normalize(q);\n\n        }\n\n        vec3 applyQuaternion( vec3 v, vec4 q ){\n            vec3 result;\n            \n            float x = v.x, y = v.y, z = v.z;\n            float qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n    \n            // calculate quat * vector\n    \n            float ix = qw * x + qy * z - qz * y;\n            float iy = qw * y + qz * x - qx * z;\n            float iz = qw * z + qx * y - qy * x;\n            float iw = - qx * x - qy * y - qz * z;\n    \n            // calculate result * inverse quat\n    \n            result.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n            result.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n            result.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n    \n            return result;\n        }\n\n    ";class s extends THREE.MeshStandardMaterial{constructor(){super({transparent:!0,blending:THREE.NoBlending}),this.uniforms={tFramebuffer:{value:null},framebufferSize:{value:new THREE.Vector2(0,0)},waterTransforms:{value:[new THREE.Matrix4,new THREE.Matrix4,new THREE.Matrix4]},time:{value:0}},(this.defines||(this.defines={})).WATER_TRANSFORM_COUNT=this.uniforms.waterTransforms.value.length.toString();const e=this.onBeforeCompile;this.onBeforeCompile=((t,n)=>{e(t,n),t.uniforms.tFramebuffer=this.uniforms.tFramebuffer,t.uniforms.framebufferSize=this.uniforms.framebufferSize,t.uniforms.waterTransforms=this.uniforms.waterTransforms,t.uniforms.time=this.uniforms.time,t.vertexShader="\n                    uniform float time;\n                "+t.vertexShader.replace("#include <project_vertex>","\n\n                    float phase = PI*2.0*(transformed.x/2.0+time);\n                    transformed.y += (cos( phase ) - sin(  phase ))*0.01;\n\n                    #include <project_vertex>\n                    "),t.fragmentShader="\n                    #include <quaternion>\n\n                    uniform sampler2D tFramebuffer;\n                    uniform vec2 framebufferSize;\n                    uniform mat4 waterTransforms[WATER_TRANSFORM_COUNT];\n                "+t.fragmentShader.replace("#include <normal_fragment_maps>","\n                    #ifdef USE_UV\n                    vec3 n = vec3(0,0,0);\n                    for( int i=0; i<WATER_TRANSFORM_COUNT; i++  ){\n                        vec2 uv = (waterTransforms[i]*vec4(vUv,0,1)).xy;\n                        n += texture2D( normalMap, uv ).rgb*2.0-1.0;\n                    }\n                    n = normalize( n );\n\n                    vec4 q = quaternionFromUnitVectors( vec3(0,0,1),  normal );\n                    normal = applyQuaternion( n, q );\n                    #endif\n                    ").replace("#include <dithering_fragment>","\n                    #include <dithering_fragment>\n\n                    vec2 framebufferUV = gl_FragCoord.xy/framebufferSize;\n\n                    vec2 offset = normalize(refract( normalize(-vViewPosition), normal, 1.0/1.33 )).xy*0.01;\n\n                    framebufferUV += offset;\n                    vec4 framebufferColor = texture2D( tFramebuffer, framebufferUV );\n\n                    gl_FragColor.rgb = mix( gl_FragColor.rgb, framebufferColor.xyz, 0.9 );\n\n                    ")}),(new THREE.TextureLoader).load("./textures/9110-normal.jpg",e=>{e.wrapS=THREE.RepeatWrapping,e.wrapT=THREE.RepeatWrapping,e.anisotropy=16,e.generateMipmaps=!0,e.minFilter=THREE.LinearMipMapLinearFilter,e.magFilter=THREE.LinearFilter,e.needsUpdate=!0,this.normalMap=e,this.needsUpdate=!0})}}e.WaterPlane=class extends THREE.Mesh{constructor(){const e=new THREE.Vector2(0,0);let i;const a=new s;super(new THREE.PlaneBufferGeometry(10,10,50,50).rotateX(-Math.PI/2),a),this.onBeforeRender=((s,r,d)=>{s.getDrawingBufferSize(o),(e.x<o.x||e.y<o.y)&&(e.x=THREE.Math.ceilPowerOfTwo(o.x),e.y=THREE.Math.ceilPowerOfTwo(o.y),(i=new THREE.DataTexture(null,e.x,e.y,THREE.RGBAFormat,THREE.UnsignedByteType,THREE.UVMapping,THREE.ClampToEdgeWrapping,THREE.ClampToEdgeWrapping,THREE.LinearFilter,THREE.LinearFilter,16)).needsUpdate=!0,a.uniforms.tFramebuffer.value=i,a.uniforms.framebufferSize.value.copy(e)),(0,s.copyFramebufferToTexture)(t,i);const l=a.uniforms.waterTransforms.value;for(let e=0;e<l.length;e++)l[e].makeTranslation(.5*performance.now()/1e3,0,0).multiply(n.makeRotationZ(e*Math.PI*4/3)).multiply(n.makeScale(5,5,5));a.uniforms.time.value=performance.now()/1e3}),this.receiveShadow=!0,this.castShadow=!1}}}(hahaApp||(hahaApp={}));