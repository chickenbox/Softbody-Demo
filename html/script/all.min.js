var hahaApp,__awaiter=this&&this.__awaiter||function(a,s,r,d){return new(r=r||Promise)(function(e,t){function o(e){try{i(d.next(e))}catch(e){t(e)}}function n(e){try{i(d.throw(e))}catch(e){t(e)}}function i(t){t.done?e(t.value):new r(function(e){e(t.value)}).then(o,n)}i((d=d.apply(a,s||[])).next())})};!function(e){const i=new Ammo.btTransform,a=new Ammo.btVector3,s=new Ammo.btQuaternion(1,0,0,0),r=new THREE.Matrix4,o=new THREE.Matrix4,d=new THREE.Vector3,l=new THREE.Quaternion,n=new THREE.Quaternion;e.Object=class{constructor(e,t,o,n){this.mass=e,this.collisionShape=t,this.object3D=o,this.object3D.updateMatrixWorld(),d.setFromMatrixPosition(this.object3D.matrixWorld),l.setFromRotationMatrix(r.extractRotation(this.object3D.matrixWorld)),a.setValue(d.x,d.y,d.z),s.setValue(l.x,l.y,l.z,l.w),i.setOrigin(a),i.setRotation(s);o=new Ammo.btDefaultMotionState(i);n||0==e||(t.calculateLocalInertia(e,a),n=a);n=new Ammo.btRigidBodyConstructionInfo(e,o,t,0!=e?n:void 0);this.motionState=o,this.rigidBody=new Ammo.btRigidBody(n),0==e&&this.rigidBody.setCollisionFlags(1)}update(e){this.sync()}sync(){if(0!=this.mass){this.motionState.getWorldTransform(i);const e=i.getRotation(),t=i.getOrigin();d.set(t.x(),t.y(),t.z()),l.set(e.x(),e.y(),e.z(),e.w()),this.object3D.parent&&(r.copy(this.object3D.parent.matrixWorld).invert(),n.setFromRotationMatrix(o.extractRotation(r)),l.premultiply(n),d.applyMatrix4(r)),this.object3D.quaternion.copy(l),this.object3D.position.copy(d)}}updateRigidBodyTransform(){d.setFromMatrixPosition(this.object3D.matrixWorld),l.setFromRotationMatrix(r.extractRotation(this.object3D.matrixWorld)),a.setValue(d.x,d.y,d.z),s.setValue(l.x,l.y,l.z,l.w),i.setOrigin(a),i.setRotation(s),this.rigidBody.setWorldTransform(i),this.motionState.setWorldTransform(i)}}}(hahaApp=hahaApp||{}),function(E){const o=new THREE.Vector2,n=new THREE.Vector2,y=new THREE.Vector3;new THREE.Vector4;const i=new THREE.Vector2(1,-1),a=new THREE.Matrix4;new THREE.Matrix4;const w=new Ammo.btVector3,d=new Ammo.btTransform;class f extends E.Object{update(e){super.update(e),this.object3D.rotateY(Math.PI*e/10),this.object3D.updateMatrixWorld(),this.updateRigidBodyTransform()}}function v(e){e.traverse(e=>{if(e.isMesh){const o=e.material;if(o instanceof THREE.MeshStandardMaterial){for(var t of[o.map,o.normalMap,o.roughnessMap,o.metalnessMap])t&&16!=t.anisotropy&&(t.anisotropy=16,t.needsUpdate=!0);o.side==THREE.DoubleSide&&(o.side=THREE.FrontSide,o.needsUpdate=!0)}}})}E.setAnisotropic=v;E.App=class{constructor(e){this.canvas=e,this.hud=new E.HUD,this.loadingBar=new E.LoadingBar,this.objects=[],this.softBodies=[],this.passes=new Map,this.timeElapsed=0,this.mousePressed=!1,this.pointerMove=new THREE.Vector2,this.pointerPosition=new THREE.Vector2,this.fpsCounter=0,this.player=new E.Player,this.audio=new E.AudioManager,this.contacts=new WeakMap;var t=e.getBoundingClientRect();e.width=t.width,e.height=t.height;var o=e.getContext("webgl2",{depth:!0});this.renderer=new THREE.WebGLRenderer({context:o}),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=THREE.PCFSoftShadowMap,this.renderer.setSize(t.width,t.height),this.renderer.setClearColor("#0000ff"),this.effectComposer=new THREE.EffectComposer(this.renderer),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(50,t.width/t.height);o=new THREE.RenderPass(this.scene,this.camera);this.effectComposer.addPass(o);o=new THREE.SMAAPass(t.width,t.height);this.effectComposer.addPass(o);const n=new THREE.BokehPass(this.scene,this.camera,{focus:5,maxblur:.01,aperture:5e-5});n.needsSwap=!0,this.effectComposer.addPass(n);t=new THREE.UnrealBloomPass(new THREE.Vector2(t.width,t.height),.2);this.effectComposer.addPass(t),this.passes.set("smaa",o),this.passes.set("dof",n),this.passes.set("bloom",t),e.addEventListener("mousedown",e=>{this.onMouseDown(e)}),e.addEventListener("mouseup",e=>{this.onMouseUp(e)}),e.addEventListener("mousemove",e=>{this.onMouseMove(e)}),e.addEventListener("touchstart",e=>{this.onTouchStart(e)}),e.addEventListener("touchmove",e=>{this.onTouchMove(e)}),e.addEventListener("touchend",e=>{this.onTouchEnd(e)}),e.addEventListener("touchcancel",e=>{}),document.body.appendChild(this.hud.domElement),document.body.appendChild(this.loadingBar.htmlElement),document.body.appendChild((new E.InfoPanel).htmlElement)}init(){this.setupAmmo(),this.setupScene();const e=this.loadingBar.startLoading();return E.Player.init().then(()=>e.end()),window.addEventListener("resize",()=>{this.onResize()}),this.hud.numObjects=this.objects.length,this}start(){let e=!1;return setInterval(()=>{this.updateLoop(1/60),e||(e=!0,requestAnimationFrame(()=>{e=!1,this.render(),this.fpsCounter+=1}))},1e3/60),setInterval(()=>{this.hud.fps=this.fpsCounter,this.fpsCounter=0},1e3),this}setupScene(){this.scene.add(this.camera),this.scene.add(this.player.object3D);const e=new THREE.TextureLoader,i=this.loadingBar.startLoading();Promise.all([new Promise((t,o)=>e.load("./textures/dirty_concrete_1k_jpg/dirty_concrete_diff_1k.jpg",e=>t(e),void 0,e=>o(e))),new Promise((t,o)=>e.load("./textures/dirty_concrete_1k_jpg/dirty_concrete_nor_1k.jpg",e=>t(e),void 0,e=>o(e))),new Promise((t,o)=>e.load("./textures/dirty_concrete_1k_jpg/dirty_concrete_rough_1k.jpg",e=>t(e),void 0,e=>o(e)))]).then(e=>{i.end();var t=e[0],o=e[1],n=e[2];e.forEach(e=>{e.anisotropy=16,e.needsUpdate=!0}),a.map=t,a.normalMap=o,a.normalMapType=THREE.TangentSpaceNormalMap,a.roughnessMap=n,a.needsUpdate=!0});const a=new THREE.MeshStandardMaterial({metalness:0,side:THREE.BackSide}),t=new THREE.Mesh(new THREE.BoxBufferGeometry(10,10,10),a);t.position.set(0,5,0),t.castShadow=!1,t.receiveShadow=!0,this.scene.add(t),w.setValue(5,5,5);const o=new Ammo.btCompoundShape;d.setIdentity(),w.setValue(0,-5.5,0),d.setOrigin(w),w.setValue(5,.5,5),o.addChildShape(d,new Ammo.btBoxShape(w)),d.setIdentity(),w.setValue(0,5.5,0),d.setOrigin(w),w.setValue(5,.5,5),o.addChildShape(d,new Ammo.btBoxShape(w)),d.setIdentity(),w.setValue(5.5,0,0),d.setOrigin(w),w.setValue(.5,5,5),o.addChildShape(d,new Ammo.btBoxShape(w)),d.setIdentity(),w.setValue(-5.5,0,0),d.setOrigin(w),w.setValue(.5,5,5),o.addChildShape(d,new Ammo.btBoxShape(w)),d.setIdentity(),w.setValue(0,0,-5.5),d.setOrigin(w),w.setValue(5,5,.5),o.addChildShape(d,new Ammo.btBoxShape(w)),d.setIdentity(),w.setValue(0,0,5.5),d.setOrigin(w),w.setValue(5,5,.5),o.addChildShape(d,new Ammo.btBoxShape(w));var n=new E.Object(0,o,t);this.world.addRigidBody(n.rigidBody,1,4294967295),this.objects.push(n),this.camera.position.set(0,2,0),this.camera.up.set(0,1,0),this.player.object3D.add(this.camera);const s=new THREE.SpotLight(new THREE.Color(.9,.9,.9));s.angle=Math.PI/8,s.penumbra=.2,s.shadow.mapSize.set(1024,1024),s.shadow.camera.fov=s.angle,s.target=new THREE.Object3D,s.castShadow=!0,this.scene.add(s),this.light=s;n=new THREE.AmbientLight(new THREE.Color(.2,.2,.2));this.scene.add(n),this.scene.fog=new THREE.Fog(0,5,12),this.setupTargets();const r=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/corgishiba_texturing_challenge/scene.gltf",e=>{r.end();const t=e.scene;v(t);let a=0;t.traverse(e=>{if(e.isMesh){if(1==a){const o=e.geometry;o.computeBoundingSphere(),y.copy(o.boundingSphere.center).negate();var t=1/o.boundingSphere.radius;o.translate(y.x,y.y,y.z).scale(t,t,t).rotateY(Math.PI);const n=e.material;n.side=THREE.FrontSide,n.depthWrite=!0,n.needsUpdate=!0;const i=this.setupSoftBody(o,n,new THREE.Vector3(0,1,-2));i.softbody.setUserIndex(E.AudioIndex.ar)}a++}})}),this.addHangingBall(),this.addGrass()}setupAmmo(){var e=new Ammo.btSoftBodyRigidBodyCollisionConfiguration,t=new Ammo.btCollisionDispatcher(e),o=new Ammo.btDbvtBroadphase,n=new Ammo.btSequentialImpulseConstraintSolver,i=new Ammo.btDefaultSoftBodySolver,i=new Ammo.btSoftRigidDynamicsWorld(t,o,n,e,i);this.world=i}setupTargets(){const f=[new THREE.Vector3(0,0,0),new THREE.Vector3(-.5,0,1),new THREE.Vector3(.5,0,1),new THREE.Vector3(-1,0,2),new THREE.Vector3(0,0,2),new THREE.Vector3(1,0,2),new THREE.Vector3(-1.5,0,3),new THREE.Vector3(-.5,0,3),new THREE.Vector3(.5,0,3),new THREE.Vector3(1.5,0,3),new THREE.Vector3(-2,0,4),new THREE.Vector3(-1,0,4),new THREE.Vector3(0,0,4),new THREE.Vector3(1,0,4),new THREE.Vector3(2,0,4)],g=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/bottle_old_wine/scene.gltf",e=>{g.end();const t=e.scene;v(t);var o=t.getObjectByName("bottle_05L_1_03_-_Default_0");let n=o.geometry;n.rotateX(-Math.PI/2),n.computeBoundingBox(),n.boundingBox.getCenter(y),n.translate(-y.x,-y.y,-y.z),n.boundingBox.getSize(y);e=.4/y.x;n.scale(e,e,e),n.computeBoundingBox();var i=o.material;const a=new THREE.ConvexHull;a.setFromObject(new THREE.Mesh(n));const s=new Ammo.btConvexHullShape;var r=a.faces;for(let t=0;t<r.length;t++){var d=r[t];let e=d.edge;do{var l=e.head().point;w.setValue(l.x,l.y,l.z),s.addPoint(w),e=e.next}while(e!==d.edge)}s.setMargin(.005);var h,c=new Ammo.btVector3;s.calculateLocalInertia(1,c);const m=n.boundingBox.getSize(y).y;f.forEach(e=>{e.add(new THREE.Vector3(0,.5,-2.5)).multiply(new THREE.Vector3(.96,m,.8))});for(h of f){const u=new THREE.Mesh(n,i);u.castShadow=!0,u.receiveShadow=!0,u.position.copy(h),this.scene.add(u);const p=new E.Object(1,s,u,c);p.rigidBody.setUserIndex(E.AudioIndex.bottlelHit),this.world.addRigidBody(p.rigidBody,1,-1),this.objects.push(p)}Ammo.destroy(c)})}setupSoftBody(e,t,o){o=new E.SoftBody(this.world.getWorldInfo(),e.clone().translate(o.x,o.y,o.z));const n=new THREE.Mesh(o.geometry,t);return n.receiveShadow=!0,n.castShadow=!0,this.scene.add(n),this.world.addSoftBody(o.softbody,1,-1),this.softBodies.push(o),o}addHangingBall(){const p=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/wood_stick_04/scene.gltf",e=>{p.end();const t=e.scene;v(t);var o=t.getObjectByName("wood_stick_04_wood_stick_04_0");const n=o.geometry;n.rotateY(Math.PI/2),n.computeBoundingBox(),n.boundingBox.getCenter(y),n.translate(-y.x,-y.y,-y.z),n.boundingBox.getSize(y);e=.4/y.y;n.scale(e,e,e),n.computeBoundingBox();const i=new THREE.Mesh(n,o.material);i.receiveShadow=!0,i.castShadow=!0,i.position.set(0,2,0),this.scene.add(i),n.boundingBox.getSize(y),w.setValue(y.x/2,y.y/2,y.z/2);var o=new Ammo.btCylinderShapeX(w),a=new f(0,o,i);this.world.addRigidBody(a.rigidBody,1,-1),this.objects.push(a);const s=new THREE.MeshStandardMaterial({metalness:0}),r=this.loadingBar.startLoading(),d=this.loadingBar.startLoading(),l=this.loadingBar.startLoading(),h=new THREE.TextureLoader;h.load("./textures/fabric_leather_01_1k_jpg/fabric_leather_01_diff_1k.jpg",e=>{r.end(),s.map=e,s.needsUpdate=!0}),h.load("./textures/fabric_leather_01_1k_jpg/fabric_leather_01_nor_1k.jpg",e=>{d.end(),s.normalMap=e,s.normalMapType=THREE.TangentSpaceNormalMap,s.needsUpdate=!0}),h.load("./textures/fabric_leather_01_1k_jpg/fabric_leather_01_rough_1k.jpg",e=>{l.end(),s.roughnessMap=e,s.needsUpdate=!0});for(let e=0;e<3;e++){var c=new THREE.SphereBufferGeometry(.5,16,16);const m=this.setupSoftBody(c,s,new THREE.Vector3(e-1,1.5));m.softbody.getCollisionShape().setMargin(.1),m.softbody.setUserIndex(E.AudioIndex.punch);for(let e=0;e<m.softbody.m_nodes.size();e++){const u=m.softbody.m_nodes.at(e);Math.abs(u.m_x.y()-2)<1e-4&&m.softbody.appendAnchor(e,a.rigidBody,!0,1)}}v(this.scene)})}addWater(){const e=new E.WaterPlane;e.position.set(0,.1,0),this.scene.add(e)}addGrass(){THREE.MathUtils.seededRandom(.93738);var t=(new THREE.Matrix4).makeRotationX(-Math.PI/2).premultiply(a.makeScale(.005,.005,.005));const n=new Array(100);for(let e=0;e<n.length;e++){var o=+THREE.MathUtils.seededRandom()+.2;n[e]=(new THREE.Matrix4).copy(t).premultiply(a.makeScale(1,o,1)).premultiply(a.makeRotationY(THREE.MathUtils.seededRandom()*Math.PI*2)).premultiply(a.makeTranslation(5*(2*THREE.MathUtils.seededRandom()-1),0,5*(2*THREE.MathUtils.seededRandom()-1)))}const i=this.loadingBar.startLoading();(new THREE.GLTFLoader).load("./models/clover_grass/scene.gltf",e=>{i.end();const t=e.scene;t.traverse(e=>{if(e.isMesh){var t=E.GrassWinding.modify(e.material);const o=new THREE.InstancedMesh(e.geometry,t,n.length);o.customDepthMaterial=o.customDistanceMaterial=E.GrassWinding.modify(new THREE.MeshDepthMaterial({map:e.material.map,alphaTest:e.material.alphaTest})),o.castShadow=!0,o.receiveShadow=!0;for(let e=0;e<n.length;e++)o.setMatrixAt(e,n[e]);this.scene.add(o)}})})}setupPassControl(){const e=document.createElement("div");e.style.position="absolute",e.style.right="0",e.style.top="0",e.style.backgroundColor="white",e.innerHTML="<div>Pass:</div>";for(var t of this.passes){var o=t[0];const n=t[1],i=document.createElement("div"),a=document.createElement("input");a.type="checkbox",a.checked=n.enabled,a.onchange=e=>{n.enabled=e.target.checked},i.innerHTML=`${o}`,i.appendChild(a),e.appendChild(i)}document.body.appendChild(e)}updateLoop(e){this.timeElapsed+=e;var t,o,n=2*Math.PI*this.timeElapsed/10;this.light.position.set(10*-Math.cos(n),20,10*Math.sin(n)),this.player.update(this,e),this.world.stepSimulation(e),this.traceContact();for(t of this.objects)t.update(e);for(o of this.softBodies)o.update(this,e);this.pointerMove.set(0,0)}traceContact(){const o=this.world.getDispatcher();var t=o.getNumManifolds();for(let e=0;e<t;e++){const r=o.getManifoldByIndexInternal(e);var n,i=r.getNumContacts(),a=r.getBody0(),s=r.getBody1();let t=0;for(let e=0;e<i;e++){const d=r.getContactPoint(e);t+=d.getAppliedImpulse()}0!=i&&(t/=i);for(n of[{a:a,b:s},{a:s,b:a}]){const l=this.contacts.get(n.a)||new WeakMap;l.get(n.b)!=i&&(l.set(n.b,i),this.contacts.set(n.a,l),1<t&&this.audio.playSoundByIndex(n.a.getUserIndex()))}}}render(){this.effectComposer.render(1/60)}onMouseDown(e){this.mousePressed=!0;var t=e.target.getBoundingClientRect();n.set(t.width,t.height),this.pointerPosition.set(e.offsetX,e.offsetY).divide(n).multiplyScalar(2).addScalar(-1).multiply(i)}onMouseUp(e){this.mousePressed=!1,this.pointerMove.set(0,0)}onMouseMove(e){var t=e.target.getBoundingClientRect();n.set(t.width,t.height),this.pointerPosition.set(e.offsetX,e.offsetY).divide(n).multiplyScalar(2).addScalar(-1).multiply(i),this.mousePressed&&(o.set(e.movementX,e.movementY).divideScalar(n.y).multiply(i),this.pointerMove.add(o))}onTouchStart(e){this.mousePressed=!0;var t,o=e.target.getBoundingClientRect();n.set(o.width,o.height);for(t of e.touches)this.pointerPosition.set(t.clientX,t.clientY).divide(n).multiplyScalar(2).addScalar(-1).multiply(i)}onTouchMove(e){var t,o=e.target.getBoundingClientRect();n.set(o.width,o.height);for(t of e.touches)this.pointerPosition.set(t.clientY,t.clientY).divide(n).multiplyScalar(2).addScalar(-1).multiply(i)}onTouchEnd(e){this.mousePressed=!1,this.pointerMove.set(0,0)}onResize(){var e=this.canvas.getBoundingClientRect();this.canvas.width=e.width,this.canvas.height=e.height,this.renderer.setSize(e.width,e.height),this.renderer.setViewport(0,0,e.width,e.height),this.camera.aspect=e.width/e.height,this.camera.updateProjectionMatrix(),this.effectComposer.setSize(e.width,e.height)}}}(hahaApp=hahaApp||{}),function(e){class t{}t.baseballHit=1,t.bottlelHit=2,t.punch=3,t.ar=4,e.AudioIndex=t;e.AudioManager=class{constructor(){this.context=new AudioContext,this.audioBuffers={};const e=this.context.createGain();e.gain.setValueAtTime(.05,0),e.connect(this.context.destination),this.outputNode=e;var t,o={throw:"./sound/419341__wizardoz__swoosh.ogg",baseballHit:"./sound/516974__plucinskicasey__normalpunch.wav",bottlelHit:"./sound/178660__hanbaal__bottle-tink2.wav",punch:"./sound/81042__rock-savage__blood-hitting-window.wav",ar:"./sound/ar.mp3"};for(t in o){const n=t;this.createBuffer(o[n]).then(e=>{this.audioBuffers[n]=e})}}get rootNode(){return this.outputNode}playSound(e){const t=this.context.createBufferSource();t.buffer=this.audioBuffers[e],t.connect(this.rootNode),t.start()}playSoundByIndex(e){switch(e){case t.baseballHit:this.playSound("baseballHit");break;case t.bottlelHit:this.playSound("bottlelHit");break;case t.punch:this.playSound("punch");break;case t.ar:this.playSound("ar")}}createBuffer(t){return __awaiter(this,void 0,void 0,function*(){var e=yield(yield fetch(t)).arrayBuffer();return this.context.decodeAudioData(e)})}}}(hahaApp=hahaApp||{}),function(t){t.InfoPanel=class{constructor(){const e=document.createElement("div");e.style.position="absolute",e.style.top="4px",e.style.right="4px",e.style.borderRadius="4px",e.style.padding="8px",e.style.backgroundColor="white",e.style.fontFamily="Arial, Helvetica, sans-serif",e.style.userSelect="none",e.style.textAlign="right",e.innerHTML=`
            ⓘ<br/>
            <div name="content">
            <table>
            <tr>
            <td><b>Version:</b></td>
            <td>${t.config.version}</td>
            </tr>
            <tr>
            <td><b>Author:</b></td>
            <td>${t.config.author}}</td>
            </tr>
            <tr>
            <td><b>Source Code:</b></td>
            <td><a name="link">${t.config.projectUrl}</a></td>
            </tr>
            </table>
            </div>
            `,this.htmlElement=e,this.content=e.querySelector("div[name=content]"),e.addEventListener("mousedown",e=>{this.onPress()}),e.addEventListener("touchstart",e=>{this.onPress()}),e.querySelector("a[name=link]").addEventListener("mousedown",e=>{open("https://github.com/danborutori/Softbody-Demo","new"),e.stopPropagation()}),this.onPress()}onPress(){this.content.parentElement===this.htmlElement?this.htmlElement.removeChild(this.content):this.htmlElement.appendChild(this.content)}}}(hahaApp=hahaApp||{}),function(e){e.LoadingBar=class{constructor(){this.loadingCount=0;const e=document.createElement("div");e.style.backgroundColor="white",e.style.position="absolute",e.style.top="50%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",e.style.padding="8px",e.style.fontFamily="Arial, Helvetica, sans-serif",e.style.borderRadius="4px",e.style.visibility="hidden",e.style.userSelect="none",e.innerHTML="Loading...",this.htmlElement=e}startLoading(){return this.loadingCount++,this.htmlElement.style.visibility="visible",{end:()=>{0==--this.loadingCount&&(this.htmlElement.style.visibility="hidden")}}}}}(hahaApp=hahaApp||{}),function(a){let s;const n=new Ammo.btSphereShape(.2),i=new Ammo.btVector3;n.calculateLocalInertia(1,i);const r=new THREE.Matrix4,d=new THREE.Matrix4,l=new THREE.Vector3,h=new THREE.Vector4,c=new Ammo.btVector3;a.Player=class{constructor(){this.object3D=new THREE.Object3D,this.fireBallCooldown=0,this.circling={angle:0,distance:5}}static init(){return __awaiter(this,void 0,void 0,function*(){return new Promise((i,e)=>{(new THREE.GLTFLoader).load("./models/worn_baseball_ball/scene.gltf",e=>{const t=e.scene;a.setAnisotropic(t);var o=t.getObjectByName("polySurface5_lambert1_0"),e=o.material;const n=o.geometry;n.computeBoundingSphere(),l.copy(n.boundingSphere.center).negate();o=.2/n.boundingSphere.radius;n.translate(l.x,l.y,l.z).scale(o,o,o),s={material:e,geometry:n},i()},void 0,e)})})}update(e,t){this.movement(e,t),this.firingBalls(e,t)}movement(e,t){this.object3D.position.set(Math.sin(this.circling.angle)*this.circling.distance,0,-Math.cos(this.circling.angle)*this.circling.distance),e.camera.lookAt(0,0,0)}firingBalls(e,t){this.fireBallCooldown-=t,e.mousePressed&&this.fireBallCooldown<0&&(this.fireBall(e),this.fireBallCooldown=.02)}fireBall(e){if(null!=s){r.multiplyMatrices(e.camera.projectionMatrix,e.camera.matrixWorldInverse),d.copy(r).invert(),h.set(e.pointerPosition.x,e.pointerPosition.y,0,1),h.applyMatrix4(d),h.divideScalar(h.w);const t=new THREE.Mesh(s.geometry,s.material);t.castShadow=!0,t.receiveShadow=!0,t.position.set(h.x,h.y,h.z),t.quaternion.set(Math.random(),Math.random(),Math.random(),Math.random()).normalize(),e.scene.add(t);const o=new a.Object(1,n,t,i);l.setFromMatrixPosition(e.camera.matrixWorld).sub(t.position).multiplyScalar(-1),l.x+=.01*Math.random(),l.y+=.01*Math.random(),l.z+=.01*Math.random(),l.normalize().multiplyScalar(30),c.setValue(l.x,l.y,l.z),o.rigidBody.setLinearVelocity(c),o.rigidBody.setUserIndex(a.AudioIndex.baseballHit),e.world.addRigidBody(o.rigidBody,1,-1),e.objects.push(o),e.hud.numObjects=e.objects.length,e.audio.playSound("throw")}}}}(hahaApp=hahaApp||{}),function(e){const d=1e-4,l=new THREE.Vector3;function h(e){return`${Math.round(e.x/d)},${Math.round(e.y/d)},${Math.round(e.z/d)}`}e.SoftBody=class{constructor(e,t){this.soundCooldown=1;t=function(e){const t=e.clone();for(var o in t.attributes)"position"===o||t.deleteAttribute(o);var n=(i=THREE.BufferGeometryUtils.mergeVertices(t,d)).attributes.position,i=i.index;const a=new Map;for(let e=0;e<n.count;e++)l.fromBufferAttribute(n,e),a.set(h(l),e);var s=e.attributes.position;const r=new Array(s.count);for(let e=0;e<s.count;e++)l.fromBufferAttribute(s,e),r[e]=a.get(h(l));return{position:Array.from(n.array),index:Array.from(i.array),mapping:r}}(this.geometry=t);const o=new Ammo.btSoftBodyHelpers;this.softbody=o.CreateFromTriMesh(e,t.position,t.index,t.index.length/3,!0),this.softbody.m_cfg.kPR=5,this.softbody.m_cfg.viterations=10,this.softbody.m_cfg.piterations=10,this.softbody.setTotalMass(.1,!0),this.softbody.getCollisionShape().setMargin(.05),this.mapping=t.mapping,Ammo.destroy(o)}update(e,t){this.soundCooldown-=t;const o=this.geometry.attributes.position,n=this.geometry.attributes.normal,i=o.count,a=new THREE.Vector3,s=new THREE.Vector3;let r=0;for(let e=0;e<i;e++){const i=this.softbody.m_nodes.at(this.mapping[e]),d=i.m_x,l=i.m_n;a.fromBufferAttribute(o,e),s.set(d.x(),d.y(),d.z()),r=Math.max(r,a.distanceTo(s)),o.setXYZ(e,d.x(),d.y(),d.z()),n.setXYZ(e,l.x(),l.y(),l.z())}o.needsUpdate=!0,n.needsUpdate=!0,.2<r&&this.soundCooldown<=0&&(e.audio.playSoundByIndex(this.softbody.getUserIndex()),this.soundCooldown=.5)}}}(hahaApp=hahaApp||{}),function(e){const d=new THREE.Vector2(0,0),l=new THREE.Matrix4,h=new THREE.Vector2;THREE.ShaderChunk.quaternion=`

        vec4 quaternionFromUnitVectors( vec3 vFrom, vec3 vTo ){
            // assumes direction vectors vFrom and vTo are normalized

            vec4 q;

            float EPS = 0.000001;

            float r = dot(vFrom, vTo ) + 1.0;

            if ( r < EPS ) {

                r = 0.0;

                if ( abs( vFrom.x ) > abs( vFrom.z ) ) {

                    q.x = - vFrom.y;
                    q.y = vFrom.x;
                    q.z = 0.0;
                    q.w = r;

                } else {

                    q.x = 0.0;
                    q.y = - vFrom.z;
                    q.z = vFrom.y;
                    q.w = r;

                }

            } else {

                // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3

                q.x = vFrom.y * vTo.z - vFrom.z * vTo.y;
                q.y = vFrom.z * vTo.x - vFrom.x * vTo.z;
                q.z = vFrom.x * vTo.y - vFrom.y * vTo.x;
                q.w = r;

            }

            return normalize(q);

        }

        vec3 applyQuaternion( vec3 v, vec4 q ){
            vec3 result;
            
            float x = v.x, y = v.y, z = v.z;
            float qx = q.x, qy = q.y, qz = q.z, qw = q.w;
    
            // calculate quat * vector
    
            float ix = qw * x + qy * z - qz * y;
            float iy = qw * y + qz * x - qx * z;
            float iz = qw * z + qx * y - qy * x;
            float iw = - qx * x - qy * y - qz * z;
    
            // calculate result * inverse quat
    
            result.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;
            result.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;
            result.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;
    
            return result;
        }

    `;class t extends THREE.MeshStandardMaterial{constructor(){super({transparent:!0,blending:THREE.NoBlending}),this.uniforms={tFramebuffer:{value:null},framebufferSize:{value:new THREE.Vector2(0,0)},waterTransforms:{value:[new THREE.Matrix4,new THREE.Matrix4,new THREE.Matrix4]},time:{value:0}};const e=this.defines||(this.defines={});e.WATER_TRANSFORM_COUNT=this.uniforms.waterTransforms.value.length.toString();const o=this.onBeforeCompile;this.onBeforeCompile=(e,t)=>{o(e,t),e.uniforms.tFramebuffer=this.uniforms.tFramebuffer,e.uniforms.framebufferSize=this.uniforms.framebufferSize,e.uniforms.waterTransforms=this.uniforms.waterTransforms,e.uniforms.time=this.uniforms.time,e.vertexShader=`
                    uniform float time;
                `+e.vertexShader.replace("#include <project_vertex>",`

                    float phase = PI*2.0*(transformed.x/2.0+time);
                    transformed.y += (cos( phase ) - sin(  phase ))*0.01;

                    #include <project_vertex>
                    `),e.fragmentShader=`
                    #include <quaternion>

                    uniform sampler2D tFramebuffer;
                    uniform vec2 framebufferSize;
                    uniform mat4 waterTransforms[WATER_TRANSFORM_COUNT];
                `+e.fragmentShader.replace("#include <normal_fragment_maps>",`
                    #ifdef USE_UV
                    vec3 n = vec3(0,0,0);
                    for( int i=0; i<WATER_TRANSFORM_COUNT; i++  ){
                        vec2 uv = (waterTransforms[i]*vec4(vUv,0,1)).xy;
                        n += texture2D( normalMap, uv ).rgb*2.0-1.0;
                    }
                    n = normalize( n );

                    vec4 q = quaternionFromUnitVectors( vec3(0,0,1),  normal );
                    normal = applyQuaternion( n, q );
                    #endif
                    `).replace("#include <dithering_fragment>",`
                    #include <dithering_fragment>

                    vec2 framebufferUV = gl_FragCoord.xy/framebufferSize;

                    vec2 offset = normalize(refract( normalize(-vViewPosition), normal, 1.0/1.33 )).xy*0.01;

                    framebufferUV += offset;
                    vec4 framebufferColor = texture2D( tFramebuffer, framebufferUV );

                    gl_FragColor.rgb = mix( gl_FragColor.rgb, framebufferColor.xyz, 0.9 );

                    `)};const t=new THREE.TextureLoader;t.load("./textures/9110-normal.jpg",e=>{e.wrapS=THREE.RepeatWrapping,e.wrapT=THREE.RepeatWrapping,e.anisotropy=16,e.generateMipmaps=!0,e.minFilter=THREE.LinearMipMapLinearFilter,e.magFilter=THREE.LinearFilter,e.needsUpdate=!0,this.normalMap=e,this.needsUpdate=!0})}}class o extends THREE.Mesh{constructor(){const a=new THREE.Vector2(0,0);let s;const r=new t;super(new THREE.PlaneBufferGeometry(10,10,50,50).rotateX(-Math.PI/2),r),this.onBeforeRender=(e,t,o)=>{e.getDrawingBufferSize(h),(a.x<h.x||a.y<h.y)&&(a.x=THREE.Math.ceilPowerOfTwo(h.x),a.y=THREE.Math.ceilPowerOfTwo(h.y),s=new THREE.DataTexture(null,a.x,a.y,THREE.RGBAFormat,THREE.UnsignedByteType,THREE.UVMapping,THREE.ClampToEdgeWrapping,THREE.ClampToEdgeWrapping,THREE.LinearFilter,THREE.LinearFilter,16),s.needsUpdate=!0,r.uniforms.tFramebuffer.value=s,r.uniforms.framebufferSize.value.copy(a));const n=e.copyFramebufferToTexture;n(d,s);const i=r.uniforms.waterTransforms.value;for(let e=0;e<i.length;e++)i[e].makeTranslation(.5*performance.now()/1e3,0,0).multiply(l.makeRotationZ(e*Math.PI*4/3)).multiply(l.makeScale(5,5,5));r.uniforms.time.value=performance.now()/1e3},this.receiveShadow=!0,this.castShadow=!1}}e.WaterPlane=o}(hahaApp=hahaApp||{}),(hahaApp=hahaApp||{}).config={version:"1.0.3",author:"ANMCダンボールとり",projectUrl:"https://github.com/danborutori/Softbody-Demo"},function(e){const n={value:performance.now()/1e3};setInterval(()=>{n.value+=1/60},1e3/60);e.GrassWinding=class{static modify(e){const t=e.defines||(e.defines={});t.GRASS_WINDING="1";const o=e.onBeforeCompile;return e.onBeforeCompile=(e,t)=>{o(e,t),e.uniforms.grassWindTime=n,e.vertexShader=`
                    uniform float grassWindTime;
                `+e.vertexShader.replace("#include <project_vertex>",`
                    #include <project_vertex>

                    float phaseX = ( mvPosition.x + grassWindTime/3.0 ) * PI * 2.0;
                    float phaseZ = ( mvPosition.z + grassWindTime/3.0 ) * PI * 2.0;
                    float str = mvPosition.y*0.01;
                    mvPosition.x += cos( phaseX )*str;
                    mvPosition.z -= sin( phaseZ )*str;

                    gl_Position = projectionMatrix * mvPosition;
                    `)},e}}}(hahaApp=hahaApp||{}),function(e){e.HUD=class{constructor(){this._fps=0,this._numObjects=0,this.domElement=document.createElement("div"),this.domElement.style.position="absolute",this.domElement.style.left="10",this.domElement.style.top="10",this.domElement.style.userSelect="none"}set fps(e){this._fps=e,this.update()}set numObjects(e){this._numObjects=e,this.update()}update(){this.domElement.innerHTML=`<font color="white">FPS: ${this._fps}</font>`}}}(hahaApp=hahaApp||{});